#include <iostream>
#include <Windows.h>
#include <string>
#include <cstring>
#include <fstream>
#include <time.h>
#include <stdlib.h>
#include "parametry.h"
#include <cstdlib>
#include <sstream>

 
using namespace std;


// DATA PLIKU
//---------------------------------------------------------------------------
const std::string currentDateTime() {
    time_t     now = time(0);
    struct tm  tstruct;
    char       buf[80];
    tstruct = *localtime(&now);
    // Visit http://en.cppreference.com/w/cpp/chrono/c/strftime
    // for more information about date/time format
    strftime(buf, sizeof(buf), "%Y.%m.%d  %X", &tstruct);

    return buf;
}


// GODZINA PLIKU
//---------------------------------------------------------------------------
const std::string currentDateTimeGodzina() {
    time_t     now = time(0);
    struct tm  tstruct;
    char       buf[80];
    tstruct = *localtime(&now);
    // Visit http://en.cppreference.com/w/cpp/chrono/c/strftime
    // for more information about date/time format
    strftime(buf, sizeof(buf), "%X", &tstruct);

    return buf;
}


// DATA FOLDERU
//---------------------------------------------------------------------------
const std::string currentDateTimeFolder() {
    time_t     now = time(0);
    struct tm  tstruct;
    char       buf[80];
    tstruct = *localtime(&now);
    // Visit http://en.cppreference.com/w/cpp/chrono/c/strftime
    // for more information about date/time format
    strftime(buf, sizeof(buf), "%Y.%m.%d", &tstruct);

    return buf;
}

 
int main ()
{ 
    
setlocale( LC_ALL, "" ); 
   
char x;   
int max_czynnosci;   
int pauza;      
int max_etapy;  
int a;
int b;
int c;
int os_x;
int os_y;

string material_nowy;
string material_nowy_gwiazdka;
string material_ostatni;
string material_wzorzec;
string klasa_nowy;
string klasa_wzorzec;
string material_nazwa;
string marszruta;
string dlugosc;
string szerokosc;
string wysokosc;
string waga;
string abs_1;
string abs_2;
string abs_3;
string abs_4;
string nazwa_rysunku;
string dl_frez_fdolno;
string il_wiercen;
string dl_frez_dia;
string dl_frez_pila;
string dl_oprosto;
string il_oprosto;
string dl_okrzywo;
string il_okrzywo;
string rodzaj_materialu;    

string data_start = currentDateTime();
    
    
do {

system( "cls" ); 


// OTWIERANIE PLIKU Z DANYMI
//---------------------------------------------------------------------------
    fstream przechwyt; //obiekt typu fstream (uchwyt do pliku)
    przechwyt.open("plik.txt"); //otwieramy plik: plik.txt (plik - nazwa pliku, txt - rozszerzenie)
    
    
// TWORZENIE PLIKU: LOG.TXT
//---------------------------------------------------------------------------
fstream plik;   


//TWORZENIE FOLDERU
//---------------------------------------------------------------------------
string folder = currentDateTimeFolder();


if (CreateDirectory(folder.c_str(), NULL))
{
    // Directory created
}
else if (ERROR_ALREADY_EXISTS == GetLastError())
{
    // Directory already exists
}
else
{
    // Failed for some other reason
}


// WPROWADZANIE DANYCH DO KONSOLI
//---------------------------------------------------------------------------
string tworzenie_materialu;
std::cout<<"1. Tworzenie materiału (t/n): ";
std::cin>>tworzenie_materialu;


/*
if (tworzenie_materialu == "t")
{
    
std::cout<<"A. Rodzaj materiału (20/30/40): ";
std::cin>>rodzaj_materialu; 

}
*/
   
   
string tworzenie_profilu_konfiguracji;
std::cout<<"2. Tworzenie profilu konfiguracji (t/n): ";
std::cin>>tworzenie_profilu_konfiguracji;  


string tworzenie_klasy;
std::cout<<"3. Tworzenie klasy (t/n): ";
std::cin>>tworzenie_klasy;  


string przypisanie_materialu_do_klasy;
std::cout<<"4. Przypisanie materiału do klasy (t/n): ";
std::cin>>przypisanie_materialu_do_klasy; 


string wywolanie_opracowania_wgladu;
std::cout<<"5. Wywołanie opracowania wglądu - ZLOVC_BOMPOS (t/n): ";
std::cin>>wywolanie_opracowania_wgladu; 


int max_bompos = 1;


string tworzenie_specyfikacji_materialowej_dla_materialu;
std::cout<<"6. Tworzenie specyfikacji materiałowej dla materiału (t/n): ";
std::cin>>tworzenie_specyfikacji_materialowej_dla_materialu;     


string zmiana_marszruty_technologicznej;
std::cout<<"7. Zmiana marszruty technologicznej (t/n): ";
std::cin>>zmiana_marszruty_technologicznej;


int max_marszruta = 1;


std::cout<<"-------------------------------------------------------------------";
std::cout<<" "<<endl;
std::cout<<"A. Czas przerwy między czynnościami (1 = 0,5 sek.- zalecane: 1): ";
std::cin>>max_czynnosci;


std::cout<<"B. Czas przerwy między etapami (1 = 0,5 sek.- zalecane: 4): ";
std::cin>>max_etapy;
std::cout<<" "<<endl;


do {
    

getline(przechwyt, rodzaj_materialu);

    
if (rodzaj_materialu == "======= 20 =======" or rodzaj_materialu == "======= 30 =======" or rodzaj_materialu == "======= 40 =======") { 


if (rodzaj_materialu == "======= 20 =======") {

rodzaj_materialu = "20";      

}


if (rodzaj_materialu == "======= 30 =======") {

rodzaj_materialu = "30";      

}


if (rodzaj_materialu == "======= 40 =======") {

rodzaj_materialu = "40";      

}


getline(przechwyt, material_wzorzec);


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//KLIKANIE W PUSTE POLE SAP
//---------------------------------------------------------------------------
SetCursorPos( PUSTE_POLE_SAP_2 );
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
   
         
do
{     
          
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_1); 	
//---------------------------------------------------------------------------


//KLIKANIE W OKNO POLECEŃ SAP
//---------------------------------------------------------------------------
SetCursorPos( POZYCJA_OKIENKA_1 ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WPISYWANIE - MM01 (TWORZENIE MATERIAŁU)
//---------------------------------------------------------------------------
keybd_event(0x4D, 0, 0, 0); // M	       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M
keybd_event(0x4D, 0, 0, 0); // M	       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M  
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x33, 0, 0, 0); // 3	       
keybd_event(0x33, 0, KEYEVENTF_KEYUP, 0); // 3 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER   
    
    
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
         
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_2); 	
//---------------------------------------------------------------------------


//WCISKANIE - F4 (OTWIERANIE OKNA)
//---------------------------------------------------------------------------
keybd_event(0x73, 0, 0, 0); // F4	       
keybd_event(0x73, 0, KEYEVENTF_KEYUP, 0); // F4


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_SZUKANIE_OS_X;
os_y = TWORZENIE_MATERIALU_SZUKANIE_OS_Y;
       
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);


    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE IDEKSU Z GWIAZDKĄ
//---------------------------------------------------------------------------
string material_wariant_poczatek = material_wzorzec;
string material_wariant_koniec = material_wzorzec;


material_wariant_poczatek.erase (8,11);

string material_wariant_srodek_3 = "*";

material_wariant_koniec.erase (0,12);


string material_nowy_gwiazdka = material_wariant_poczatek + material_wariant_srodek_3 + material_wariant_koniec;


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
const char* material_nowy_gwiazdka_tekst = material_nowy_gwiazdka.c_str();

{
    HGLOBAL material_nowy_gwiazdka_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_gwiazdka_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_gwiazdka_zmienna,material_nowy_gwiazdka_tekst,strlen(material_nowy_gwiazdka_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_gwiazdka_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER   


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_SZUKANIE_INDEKSU_OS_X;
os_y = TWORZENIE_MATERIALU_SZUKANIE_INDEKSU_OS_Y;
       
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);


    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//KLIKANIE W KOLUMNĘ MATERIAŁ
//---------------------------------------------------------------------------
SetCursorPos( TWORZENIE_MATERIALU_SORTOWANIE ); 
mouse_event(MOUSEEVENTF_RIGHTDOWN | MOUSEEVENTF_RIGHTUP,0,0,0,0);


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//KLIKANIE W SORTOWANIE MALEJĄCE
//---------------------------------------------------------------------------
SetCursorPos( TWORZENIE_MATERIALU_SORTOWANIE_MALEJACE ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);


pauza = 1;
while( pauza <= max_czynnosci*4 )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

//WCISKANIE - STRZAŁKA W PRAWO
//---------------------------------------------------------------------------
keybd_event(0x27, 0, 0, 0); // STRZAŁKA W PRAWO           
keybd_event(0x27, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W PRAWO 
keybd_event(0x27, 0, 0, 0); // STRZAŁKA W PRAWO           
keybd_event(0x27, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W PRAWO 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+Y
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x59, 0, 0, 0); // Y	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+C (KOPIOWANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x43, 0, 0, 0); // C	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x43, 0, KEYEVENTF_KEYUP, 0); // C 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//KOPIOWANIE ZE SCHOWKA DO ZMIENNEJ
//---------------------------------------------------------------------------
#ifdef _WIN32
    if(OpenClipboard(NULL))
    {
        HANDLE data = GetClipboardData(CF_TEXT);
        if(data)
        {
            material_ostatni = reinterpret_cast<char *>(GlobalLock(data));
            GlobalUnlock(data);
        }
        CloseClipboard();
    }
#endif


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ESCAPE
//---------------------------------------------------------------------------
keybd_event(0x1B, 0, 0, 0); // ESCAPE	 
keybd_event(0x1B, 0, KEYEVENTF_KEYUP, 0); // ESCAPE 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE NOWEGO ŚRODKA INDEKSU
//---------------------------------------------------------------------------
string material_wariant_srodek = material_ostatni;

material_wariant_srodek.erase (0,8);
string material_wariant_srodek_2 = material_wariant_srodek;
material_wariant_srodek_2.erase (4,6);


//ZMIANA STRING NA INT I USUWANIE ZNAKÓW
//---------------------------------------------------------------------------
//int material_wariant_srodek_dodanie;
//material_wariant_srodek_dodanie = atoi(material_wariant_srodek_2.c_str())+1;


string liczba_1000 = material_wariant_srodek_2;
liczba_1000.erase (1,3);

int liczba_1000_int;
liczba_1000_int = atoi(liczba_1000.c_str());


string liczba_100 = material_wariant_srodek_2;
liczba_100.erase (0,1);
string liczba_100_2 = liczba_100;
liczba_100_2.erase (1,2);

int liczba_100_2_int;
liczba_100_2_int = atoi(liczba_100_2.c_str());


string liczba_10 = material_wariant_srodek_2;
liczba_10.erase (0,2);
string liczba_10_2 = liczba_10;
liczba_10_2.erase (1,1);

int liczba_10_2_int;
liczba_10_2_int = atoi(liczba_10_2.c_str());


string liczba_1 = material_wariant_srodek_2;
liczba_1.erase (0,3);

int liczba_1_int;
liczba_1_int = atoi(liczba_1.c_str());


//DODAWANIE LICZBY DO INDEKSU
//---------------------------------------------------------------------------
liczba_1_int++; 

if (liczba_1_int == 10) {
liczba_1_int = 0;
liczba_10_2_int++;   
}
 
if (liczba_10_2_int == 10) {
liczba_10_2_int = 0;
liczba_100_2_int++;    
}

if (liczba_100_2_int == 10) {
liczba_100_2_int = 0;
liczba_1000_int++;    
}


int material_wariant_srodek_dodanie = 1000*liczba_1000_int + 100*liczba_100_2_int + 10*liczba_10_2_int + liczba_1_int;


//ZMIANA INT NA STRING
//---------------------------------------------------------------------------
ostringstream material_wariant_srodek_dodanie_int;
material_wariant_srodek_dodanie_int << material_wariant_srodek_dodanie;
std::string material_wariant_srodek_dodanie_string = material_wariant_srodek_dodanie_int.str();


string material_nowy = material_wariant_poczatek + material_wariant_srodek_dodanie_string + material_wariant_koniec;



//ZMIANA ZNAKÓW Z - NA _ - KLASA NOWY
//---------------------------------------------------------------------------
string klasa_nowy_poczatek = material_nowy;
string klasa_nowy_srodek_1 = material_nowy;

string klasa_nowy_srodek_2 = material_nowy;

string klasa_nowy_koniec = material_nowy;

klasa_nowy_poczatek.erase (2,16);
klasa_nowy_srodek_1.erase (0,3);
string klasa_nowy_srodek_1_2 = klasa_nowy_srodek_1;
klasa_nowy_srodek_1_2.erase (4,11);

klasa_nowy_srodek_2.erase (0,8);
string klasa_nowy_srodek_2_2 = klasa_nowy_srodek_2;
klasa_nowy_srodek_2_2.erase (4,6);

klasa_nowy_koniec.erase (0,13);

klasa_nowy = klasa_nowy_poczatek + "_" + klasa_nowy_srodek_1_2 + "_" + klasa_nowy_srodek_2_2 + "_" + klasa_nowy_koniec;


//ZMIANA ZNAKÓW Z - NA _ - KLASA WZORZEC
//---------------------------------------------------------------------------
string klasa_wzorzec_poczatek = material_wzorzec;
string klasa_wzorzec_srodek_1 = material_wzorzec;

string klasa_wzorzec_srodek_2 = material_wzorzec;

string klasa_wzorzec_koniec = material_wzorzec;

klasa_wzorzec_poczatek.erase (2,16);
klasa_wzorzec_srodek_1.erase (0,3);
string klasa_wzorzec_srodek_1_2 = klasa_nowy_srodek_1;
klasa_wzorzec_srodek_1_2.erase (4,11);

klasa_wzorzec_srodek_2.erase (0,8);
string klasa_wzorzec_srodek_2_2 = klasa_wzorzec_srodek_2;
klasa_wzorzec_srodek_2_2.erase (4,6);

klasa_wzorzec_koniec.erase (0,13);

klasa_wzorzec = klasa_wzorzec_poczatek + "_" + klasa_wzorzec_srodek_1_2 + "_" + klasa_wzorzec_srodek_2_2 + "_" + klasa_wzorzec_koniec;



//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_SZUKANIE_INDEKSU_OS_X;
os_y = TWORZENIE_MATERIALU_SZUKANIE_INDEKSU_OS_Y;
       
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);


    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_2); 	
//---------------------------------------------------------------------------


//WCISKANIE - F3 (PRZEJŚCIE DO: DANE GŁÓWNE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3	 
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE DANYCH Z PLIKU: PLIK.TXT
//---------------------------------------------------------------------------
//getline(przechwyt, material_nowy);
std::cout<<"==========================================================================="<<endl;
std::cout<<"Rodzaj indeksu: "<< rodzaj_materialu<<endl;
std::cout<<"Indeks - Nowy: "<< material_nowy<<endl;


string plik_start_tekst = "log_";
string plik_koniec_tekst = ".txt";
string plik_caly = folder + "/" + plik_start_tekst + material_nowy + plik_koniec_tekst;
plik.open(plik_caly.c_str(), ios::out);
  

plik <<"<<<POCZĄTEK>>"<< endl; 
plik <<" "<< endl; 
plik <<"Data rozpoczęcia: "<<currentDateTime()<<endl;
plik <<"==================================================================="<< endl;  
plik <<"Rodzaj indeksu: "<<rodzaj_materialu<<endl; 
plik <<"Materiał - Nowy: "<<material_nowy<<endl;  

//---------------------------------------------------------------------------


std::cout<<"Materiał - Wzorzec: "<<material_wzorzec<<endl;


plik <<"Materiał - Wzorzec: "<<material_wzorzec<< endl;

//---------------------------------------------------------------------------

//getline(przechwyt, klasa_nowy);
std::cout<<"Klasa - Nowy: "<<klasa_nowy<<endl;


plik <<"Klasa - Nowy: "<<klasa_nowy << endl;

//---------------------------------------------------------------------------

//getline(przechwyt, klasa_wzorzec);
std::cout<<"Klasa - Wzorzec: "<<klasa_wzorzec<<endl;


plik <<"Klasa - Wzorzec: "<<klasa_wzorzec<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, material_nazwa);
std::cout<<"Materiał - Nazwa: "<<material_nazwa<<endl;


plik <<"Materiał - Nazwa: "<<material_nazwa<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, marszruta);
std::cout<<"Marszruta: "<<marszruta<<endl;


plik <<"Marszruta: "<<marszruta<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, dlugosc);
std::cout<<"---------------------------------------------------------------------------"<<endl;
std::cout<<"Długość: "<<dlugosc<<endl;

plik <<"-------------------------------------------------------------------"<< endl;
plik <<"Długość: "<<dlugosc<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, szerokosc);
std::cout<<"Szerokość: "<<szerokosc<<endl;


plik <<"Szerokość: "<<szerokosc<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, wysokosc);
std::cout<<"Wysokość: "<<wysokosc<<endl;


plik <<"Wysokość: "<<wysokosc<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, waga);
std::cout<<"Waga: "<<waga<<endl;


plik <<"Waga: "<<waga<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, abs_1);
std::cout<<"---------------------------------------------------------------------------"<<endl;
std::cout<<"ABS 1: "<<abs_1<<endl;

plik <<"-------------------------------------------------------------------"<< endl;
plik <<"ABS 1: "<<abs_1<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, abs_2);
std::cout<<"ABS 2: "<<abs_2<<endl;


plik <<"ABS 2: "<<abs_2<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, abs_3);
std::cout<<"ABS 3: "<<abs_3<<endl;


plik <<"ABS 3: "<<abs_3<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, abs_4);
std::cout<<"ABS 4: "<<abs_4<<endl;


plik <<"ABS 4: "<<abs_4<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, nazwa_rysunku);



if (rodzaj_materialu == "40") {
 
string nazwa_rysunku_skrot = material_nowy;
nazwa_rysunku_skrot.erase (12,6);
nazwa_rysunku = nazwa_rysunku_skrot; 
    
}


std::cout<<"---------------------------------------------------------------------------"<<endl;
std::cout<<"Nazwa rysunku: "<<nazwa_rysunku<<endl;

plik <<"-------------------------------------------------------------------"<< endl;
plik <<"Nazwa rysunku: "<<nazwa_rysunku<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, dl_frez_fdolno);
std::cout<<"DL_FREZ_FDOLNO: "<<dl_frez_fdolno<<endl;


plik <<"DL_FREZ_FDOLNO: "<<dl_frez_fdolno<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, il_wiercen);
std::cout<<"IL_WIERCEN: "<<il_wiercen<<endl;


plik <<"IL_WIERCEN: "<<il_wiercen<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, dl_frez_dia);
std::cout<<"DL_FREZ_DIA: "<<dl_frez_dia<<endl;


plik <<"DL_FREZ_DIA: "<<dl_frez_dia<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, dl_frez_pila);
std::cout<<"DL_FREZ_PILA: "<<dl_frez_pila<<endl;


plik <<"DL_FREZ_PILA: "<<dl_frez_pila<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, dl_oprosto);
std::cout<<"DL_OPROSTO: "<<dl_oprosto<<endl;


plik <<"DL_OPROSTO: "<<dl_oprosto<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, il_oprosto);
std::cout<<"IL_OPROSTO: "<<il_oprosto<<endl;


plik <<"IL_OPROSTO: "<<il_oprosto<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, dl_okrzywo);
std::cout<<"DL_OKRZYWO: "<<dl_okrzywo<<endl;


plik <<"DL_OKRZYWO: "<<dl_okrzywo<< endl;

//---------------------------------------------------------------------------

getline(przechwyt, il_okrzywo);
std::cout<<"IL_OKRZYWO: "<<il_okrzywo<<endl;


plik <<"IL_OKRZYWO: "<<il_okrzywo<< endl;

//---------------------------------------------------------------------------


const char* material_nowy_tekst = material_nowy.c_str();
const char* material_wzorzec_tekst = material_wzorzec.c_str();
const char* klasa_nowy_tekst = klasa_nowy.c_str();
const char* klasa_wzorzec_tekst = klasa_wzorzec.c_str();
const char* material_nazwa_tekst = material_nazwa.c_str();
const char* marszruta_tekst = marszruta.c_str();

const char* dlugosc_tekst = dlugosc.c_str();
const char* szerokosc_tekst = szerokosc.c_str();
const char* wysokosc_tekst = wysokosc.c_str();
const char* waga_tekst = waga.c_str();

const char* abs_1_tekst = abs_1.c_str();
const char* abs_2_tekst = abs_2.c_str();
const char* abs_3_tekst = abs_3.c_str();
const char* abs_4_tekst = abs_4.c_str(); 

const char* nazwa_rysunku_tekst = nazwa_rysunku.c_str(); 
const char* dl_frez_fdolno_tekst = dl_frez_fdolno.c_str();
const char* il_wiercen_tekst = il_wiercen.c_str();
const char* dl_frez_dia_tekst = dl_frez_dia.c_str();
const char* dl_frez_pila_tekst = dl_frez_pila.c_str(); 
const char* dl_oprosto_tekst = dl_oprosto.c_str();
const char* il_oprosto_tekst = il_oprosto.c_str();
const char* dl_okrzywo_tekst = dl_okrzywo.c_str();
const char* il_okrzywo_tekst = il_okrzywo.c_str();


//TWORZENIE MATERIAŁU
//---------------------------------------------------------------------------
std::cout<<"---------------------------------------------------------------------------"<<endl;
std::cout<<"1. Tworzenie materiału: ";


//TWORZENIE MATERIAŁU - 20 (ELEMENTY)
//---------------------------------------------------------------------------
if (tworzenie_materialu == "t" and rodzaj_materialu == "20")
{

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
   
         
do
{     
          
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_1); 	
//---------------------------------------------------------------------------


//KLIKANIE W OKNO POLECEŃ SAP
//---------------------------------------------------------------------------
SetCursorPos( POZYCJA_OKIENKA_1 ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WPISYWANIE - MM01 (TWORZENIE MATERIAŁU)
//---------------------------------------------------------------------------
keybd_event(0x4D, 0, 0, 0); // M	       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M
keybd_event(0x4D, 0, 0, 0); // M	       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M  
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1	       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER   
    
    
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
         
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_2); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_zmienna,material_nowy_tekst,strlen(material_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

    
//WPISYWANIE - B
//---------------------------------------------------------------------------
keybd_event(0x42, 0, 0, 0); // B	 
keybd_event(0x42, 0, KEYEVENTF_KEYUP, 0); // B 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - ELEMENTY
//---------------------------------------------------------------------------
keybd_event(0x45, 0, 0, 0); // E  
keybd_event(0x45, 0, KEYEVENTF_KEYUP, 0); // E
keybd_event(0x4C, 0, 0, 0); // L  
keybd_event(0x4C, 0, KEYEVENTF_KEYUP, 0); // L 
keybd_event(0x45, 0, 0, 0); // E  
keybd_event(0x45, 0, KEYEVENTF_KEYUP, 0); // E 
keybd_event(0x4D, 0, 0, 0); // M  
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M 
keybd_event(0x45, 0, 0, 0); // E  
keybd_event(0x45, 0, KEYEVENTF_KEYUP, 0); // E 
keybd_event(0x4E, 0, 0, 0); // N  
keybd_event(0x4E, 0, KEYEVENTF_KEYUP, 0); // N 
keybd_event(0x54, 0, 0, 0); // T  
keybd_event(0x54, 0, KEYEVENTF_KEYUP, 0); // T 
keybd_event(0x59, 0, 0, 0); // Y  
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y 
	

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------  
	keybd_event(0x09, 0, 0, 0); // TAB	 
	keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
	keybd_event(0x09, 0, 0, 0); // TAB	 
	keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_wzorzec_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_wzorzec_tekst) + 1); //text size + \0 character
    memcpy(material_wzorzec_zmienna,material_wzorzec_tekst,strlen(material_wzorzec_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_wzorzec_zmienna);
        CloseClipboard();
    }
}

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V   


	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER         
 
 
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//TWORZENIE MATERIAŁU - WYBÓR WGLĄDÓW
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_WYBOR_WGLADOW_OS_X;
os_y = TWORZENIE_MATERIALU_WYBOR_WGLADOW_OS_Y;
       
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);


    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------
    
    
//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------    
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}           
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}   


//TWORZENIE MATERIAŁU - POZIOMY ORGANIZACYJNE
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_POZIOMY_ORGANIZACYJNE_OS_X;
os_y = TWORZENIE_MATERIALU_POZIOMY_ORGANIZACYJNE_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WPISYWANIE - MP01
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x4D, 0, 0, 0); // M       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M
keybd_event(0x50, 0, 0, 0); // P       
keybd_event(0x50, 0, KEYEVENTF_KEYUP, 0); // P 
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WPISYWANIE - MP01
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x4D, 0, 0, 0); // M       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M
keybd_event(0x50, 0, 0, 0); // P       
keybd_event(0x50, 0, KEYEVENTF_KEYUP, 0); // P 
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  	


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}
	

//TWORZENIE MATERIAŁU - DANE PODSTAWOWE_1	
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_X;
os_y = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nazwa_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nazwa_tekst) + 1); //text size + \0 character
    memcpy(material_nazwa_zmienna,material_nazwa_tekst,strlen(material_nazwa_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nazwa_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL
keybd_event(0x56, 0, 0, 0); // V	  
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


// TWORZENIE MATERIAŁU - DANE DODATKOWE - POCZĄTEK
//---------------------------------------------------------------------------
if (szerokosc != "0" or dlugosc != "0" or wysokosc != "0" or waga != "0") {

if (szerokosc == "0") {
szerokosc = " ";
}

if (dlugosc == "0") {
dlugosc = " ";
}

if (wysokosc == "0") {
wysokosc = " ";
}

if (waga == "0") {
waga = " ";
}

//WCISKANIE - CTRL+F6 (PRZEJŚCIE DO: DANE DODATKOWE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL
keybd_event(0x75, 0, 0, 0); // F6	  
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x75, 0, KEYEVENTF_KEYUP, 0); // F6 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - F6 (PRZEJŚCIE DO: JEDNOSTKI MIARY)
//---------------------------------------------------------------------------
keybd_event(0x75, 0, 0, 0); // F6	    
keybd_event(0x75, 0, KEYEVENTF_KEYUP, 0); // F6 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dlugosc_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dlugosc_tekst) + 1); //text size + \0 character
    memcpy(dlugosc_zmienna,dlugosc_tekst,strlen(dlugosc_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dlugosc_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL szerokosc_zmienna = GlobalAlloc(GMEM_FIXED,strlen(szerokosc_tekst) + 1); //text size + \0 character
    memcpy(szerokosc_zmienna,szerokosc_tekst,strlen(szerokosc_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,szerokosc_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL wysokosc_zmienna = GlobalAlloc(GMEM_FIXED,strlen(wysokosc_tekst) + 1); //text size + \0 character
    memcpy(wysokosc_zmienna,wysokosc_tekst,strlen(wysokosc_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,wysokosc_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//WCISKANIE - BACKSPACE
//---------------------------------------------------------------------------
keybd_event(0x08, 0, 0, 0); // BACKSPACE            
keybd_event(0x08, 0, KEYEVENTF_KEYUP, 0); // BACKSPACE 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER     


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL waga_zmienna = GlobalAlloc(GMEM_FIXED,strlen(waga_tekst) + 1); //text size + \0 character
    memcpy(waga_zmienna,waga_tekst,strlen(waga_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,waga_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL waga_zmienna = GlobalAlloc(GMEM_FIXED,strlen(waga_tekst) + 1); //text size + \0 character
    memcpy(waga_zmienna,waga_tekst,strlen(waga_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,waga_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	

	
//WCISKANIE - CTRL+F3 (PRZEJŚCIE DO: DANE GŁÓWNE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x72, 0, 0, 0); // F3	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_X;
os_y = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_Y;	
      
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


}
//---------------------------------------------------------------------------
// TWORZENIE MATERIAŁU - DANE DODATKOWE - KONIEC


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE MATERIAŁU - DANE PODTSAWOWE 2 - POCZĄTEK
//--------------------------------------------------------------------------- 
if (abs_1 != "0" or abs_2 != "0" or abs_3 != "0" or abs_4 != "0") {

if (abs_1 == "0") {
abs_1 = " ";
}

if (abs_2 == "0") {
abs_2 = " ";
}

if (abs_3 == "0") {
abs_3 = " ";
}

if (abs_4 == "0") {
abs_4 = " ";
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	
	

//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------	
{
    HGLOBAL abs_1_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_1_tekst) + 1); //text size + \0 character
    memcpy(abs_1_zmienna,abs_1_tekst,strlen(abs_1_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_1_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		
	

//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL abs_2_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_2_tekst) + 1); //text size + \0 character
    memcpy(abs_2_zmienna,abs_2_tekst,strlen(abs_2_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_2_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL abs_3_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_3_tekst) + 1); //text size + \0 character
    memcpy(abs_3_zmienna,abs_3_tekst,strlen(abs_3_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_3_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL abs_4_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_4_tekst) + 1); //text size + \0 character
    memcpy(abs_4_zmienna,abs_4_tekst,strlen(abs_4_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_4_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
}
//---------------------------------------------------------------------------	
//TWORZENIE MATERIAŁU - DANE PODTSAWOWE 2 - KONIEC


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WYRÓB GOTOWY


//TWORZENIE MATERIAŁU - KLASYFIKACJA - POCZĄTEK
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
       
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
	
    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	


//KLIKANIE W POLE SAP
//---------------------------------------------------------------------------
SetCursorPos( KLASYFIKACJA_ZAZNACZANIE_KLASY );
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0); 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//KLIKANIE W POLE SAP
//---------------------------------------------------------------------------
SetCursorPos( KLASYFIKACJA_USUWANIE_KLASY );
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0); 
    

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_KLASYFIKACJA_USUWANIE_MATERIALU_OS_X;
os_y = TWORZENIE_MATERIALU_KLASYFIKACJA_USUWANIE_MATERIALU_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

//WCISKANIE - PGDN - PAGE DOWN
//---------------------------------------------------------------------------
keybd_event(0x22, 0, 0, 0); // PAGE DOWN	
keybd_event(0x22, 0, KEYEVENTF_KEYUP, 0); // PAGE DOWN
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - STRZAŁKA W DÓŁ
//---------------------------------------------------------------------------
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ     
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE MATERIAŁU - KLASYFIKACJA - NAZWA RYSUNKU - POCZĄTEK
//---------------------------------------------------------------------------
if (nazwa_rysunku != "0") {


{
    HGLOBAL nazwa_rysunku_zmienna = GlobalAlloc(GMEM_FIXED,strlen(nazwa_rysunku_tekst) + 1); //text size + \0 character
    memcpy(nazwa_rysunku_zmienna,nazwa_rysunku_tekst,strlen(nazwa_rysunku_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,nazwa_rysunku_zmienna);
        CloseClipboard();
    }
}

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

	// Wklejam nowy indeks MATERIAŁU
    keybd_event(0x11, 0, 0, 0); // CRTL
	keybd_event(0x56, 0, 0, 0); // V	 
	keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
	keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


    keybd_event(0x0D, 0, 0, 0); // ENTER
    keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

}
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - KLASYFIKACJA - NAZWA RYSUNKU - KONIEC


//WCISKANIE - PGDN - PAGE DOWN
//---------------------------------------------------------------------------
keybd_event(0x22, 0, 0, 0); // PAGE DOWN	
keybd_event(0x22, 0, KEYEVENTF_KEYUP, 0); // PAGE DOWN
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE MATERIAŁU - KLASYFIKACJA - DODATKOWE POLA - POCZĄTEK
//---------------------------------------------------------------------------
if (dl_frez_fdolno != "0" or il_wiercen != "0" or dl_frez_dia != "0" or dl_frez_pila != "0" or dl_oprosto != "0"
    and il_oprosto != "0" or dl_okrzywo != "0" or il_okrzywo != "0") {


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_frez_fdolno_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_frez_fdolno_tekst) + 1); //text size + \0 character
    memcpy(dl_frez_fdolno_zmienna,dl_frez_fdolno_tekst,strlen(dl_frez_fdolno_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_frez_fdolno_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL il_wiercen_zmienna = GlobalAlloc(GMEM_FIXED,strlen(il_wiercen_tekst) + 1); //text size + \0 character
    memcpy(il_wiercen_zmienna,il_wiercen_tekst,strlen(il_wiercen_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,il_wiercen_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_frez_dia_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_frez_dia_tekst) + 1); //text size + \0 character
    memcpy(dl_frez_dia_zmienna,dl_frez_dia_tekst,strlen(dl_frez_dia_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_frez_dia_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_frez_pila_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_frez_pila_tekst) + 1); //text size + \0 character
    memcpy(dl_frez_pila_zmienna,dl_frez_pila_tekst,strlen(dl_frez_pila_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_frez_pila_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_oprosto_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_oprosto_tekst) + 1); //text size + \0 character
    memcpy(dl_oprosto_zmienna,dl_oprosto_tekst,strlen(dl_oprosto_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_oprosto_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL il_oprosto_zmienna = GlobalAlloc(GMEM_FIXED,strlen(il_oprosto_tekst) + 1); //text size + \0 character
    memcpy(il_oprosto_zmienna,il_oprosto_tekst,strlen(il_oprosto_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,il_oprosto_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V  

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_okrzywo_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_okrzywo_tekst) + 1); //text size + \0 character
    memcpy(dl_okrzywo_zmienna,dl_okrzywo_tekst,strlen(dl_okrzywo_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_okrzywo_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL il_okrzywo_zmienna = GlobalAlloc(GMEM_FIXED,strlen(il_okrzywo_tekst) + 1); //text size + \0 character
    memcpy(il_okrzywo_zmienna,il_okrzywo_tekst,strlen(il_okrzywo_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,il_okrzywo_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
}
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - KLASYFIKACJA - DODATKOWE POLA - KONIEC	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - F8 (PRZEJŚCIE DO: MRP1)
//---------------------------------------------------------------------------
keybd_event(0x77, 0, 0, 0); // F8	 
keybd_event(0x77, 0, KEYEVENTF_KEYUP, 0); // F8 


//TWORZENIE MATERIAŁU - MRP1
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_MRP1_OS_X;
os_y = TWORZENIE_MATERIALU_MRP1_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_ZAPISANIE_OS_X;
os_y = TWORZENIE_MATERIALU_ZAPISANIE_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	
	

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	
	

//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3
    

std::cout<<"TAK"<<std::endl;    
    
    
}
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - 20 (ELEMENTY)


//TWORZENIE MATERIAŁU - 30 (PÓŁFABRYKATY)
//---------------------------------------------------------------------------
else if (tworzenie_materialu == "t" and rodzaj_materialu == "30")
{

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);


    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_1); 	
//---------------------------------------------------------------------------


//KLIKANIE W OKNO POLECEŃ SAP
//---------------------------------------------------------------------------
SetCursorPos( POZYCJA_OKIENKA_1 ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WPISYWANIE - MM01 (TWORZENIE MATERIAŁU)
//---------------------------------------------------------------------------
keybd_event(0x4D, 0, 0, 0); // M	       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M
keybd_event(0x4D, 0, 0, 0); // M	       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M  
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1	       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER   
    
    
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
         
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_2); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_zmienna,material_nowy_tekst,strlen(material_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

    
//WPISYWANIE - B
//---------------------------------------------------------------------------
keybd_event(0x42, 0, 0, 0); // B	 
keybd_event(0x42, 0, KEYEVENTF_KEYUP, 0); // B 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - PÓŁ
//---------------------------------------------------------------------------
keybd_event(0x50, 0, 0, 0); // P	 
keybd_event(0x50, 0, KEYEVENTF_KEYUP, 0); // P
keybd_event(0x11, 0, 0, 0); // CTRL	
keybd_event(0x12, 0, 0, 0); // ALT
keybd_event(0x4F, 0, 0, 0); // O	 
keybd_event(0x4F, 0, KEYEVENTF_KEYUP, 0); // O 	
keybd_event(0x4C, 0, 0, 0); // L	 
keybd_event(0x4C, 0, KEYEVENTF_KEYUP, 0); // L 
keybd_event(0x12, 0, KEYEVENTF_KEYUP, 0); // ALT	
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL 
    	

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------  
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_wzorzec_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_wzorzec_tekst) + 1); //text size + \0 character
    memcpy(material_wzorzec_zmienna,material_wzorzec_tekst,strlen(material_wzorzec_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_wzorzec_zmienna);
        CloseClipboard();
    }
}

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V   

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER         


//TWORZENIE MATERIAŁU - WYBÓR WGLĄDÓW
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_WYBOR_WGLADOW_OS_X;
os_y = TWORZENIE_MATERIALU_WYBOR_WGLADOW_OS_Y;
       
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);


    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------
   

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------    
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}           
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//TWORZENIE MATERIAŁU - POZIOMY ORGANIZACYJNE
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_POZIOMY_ORGANIZACYJNE_OS_X;
os_y = TWORZENIE_MATERIALU_POZIOMY_ORGANIZACYJNE_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WPISYWANIE - MP01
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x4D, 0, 0, 0); // M       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M
keybd_event(0x50, 0, 0, 0); // P       
keybd_event(0x50, 0, KEYEVENTF_KEYUP, 0); // P 
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WPISYWANIE - MP01
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x4D, 0, 0, 0); // M       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M
keybd_event(0x50, 0, 0, 0); // P       
keybd_event(0x50, 0, KEYEVENTF_KEYUP, 0); // P 
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  	


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
	

//TWORZENIE MATERIAŁU - DANE PODSTAWOWE_1	
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_X;
os_y = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nazwa_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nazwa_tekst) + 1); //text size + \0 character
    memcpy(material_nazwa_zmienna,material_nazwa_tekst,strlen(material_nazwa_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nazwa_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL
keybd_event(0x56, 0, 0, 0); // V	  
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


// TWORZENIE MATERIAŁU - DANE DODATKOWE - POCZĄTEK
//---------------------------------------------------------------------------
if (szerokosc != "0" or dlugosc != "0" or wysokosc != "0" or waga != "0") {

if (szerokosc == "0") {
szerokosc = " ";
}

if (dlugosc == "0") {
dlugosc = " ";
}

if (wysokosc == "0") {
wysokosc = " ";
}

if (waga == "0") {
waga = " ";
}

//WCISKANIE - CTRL+F6 (PRZEJŚCIE DO: DANE DODATKOWE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL
keybd_event(0x75, 0, 0, 0); // F6	  
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x75, 0, KEYEVENTF_KEYUP, 0); // F6 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - F6 (PRZEJŚCIE DO: JEDNOSTKI MIARY)
//---------------------------------------------------------------------------
keybd_event(0x75, 0, 0, 0); // F6	    
keybd_event(0x75, 0, KEYEVENTF_KEYUP, 0); // F6 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dlugosc_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dlugosc_tekst) + 1); //text size + \0 character
    memcpy(dlugosc_zmienna,dlugosc_tekst,strlen(dlugosc_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dlugosc_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL szerokosc_zmienna = GlobalAlloc(GMEM_FIXED,strlen(szerokosc_tekst) + 1); //text size + \0 character
    memcpy(szerokosc_zmienna,szerokosc_tekst,strlen(szerokosc_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,szerokosc_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL wysokosc_zmienna = GlobalAlloc(GMEM_FIXED,strlen(wysokosc_tekst) + 1); //text size + \0 character
    memcpy(wysokosc_zmienna,wysokosc_tekst,strlen(wysokosc_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,wysokosc_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//WCISKANIE - BACKSPACE
//---------------------------------------------------------------------------
keybd_event(0x08, 0, 0, 0); // BACKSPACE            
keybd_event(0x08, 0, KEYEVENTF_KEYUP, 0); // BACKSPACE 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER     


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL waga_zmienna = GlobalAlloc(GMEM_FIXED,strlen(waga_tekst) + 1); //text size + \0 character
    memcpy(waga_zmienna,waga_tekst,strlen(waga_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,waga_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL waga_zmienna = GlobalAlloc(GMEM_FIXED,strlen(waga_tekst) + 1); //text size + \0 character
    memcpy(waga_zmienna,waga_tekst,strlen(waga_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,waga_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	

	
//WCISKANIE - CTRL+F3 (PRZEJŚCIE DO: DANE GŁÓWNE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x72, 0, 0, 0); // F3	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_X;
os_y = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_Y;	
      
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


}
//---------------------------------------------------------------------------
// TWORZENIE MATERIAŁU - DANE DODATKOWE - KONIEC


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE MATERIAŁU - DANE PODTSAWOWE 2 - POCZĄTEK
//--------------------------------------------------------------------------- 
if (abs_1 != "0" or abs_2 != "0" or abs_3 != "0" or abs_4 != "0") {

if (abs_1 == "0") {
abs_1 = " ";
}

if (abs_2 == "0") {
abs_2 = " ";
}

if (abs_3 == "0") {
abs_3 = " ";
}

if (abs_4 == "0") {
abs_4 = " ";
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	
	

//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------	
{
    HGLOBAL abs_1_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_1_tekst) + 1); //text size + \0 character
    memcpy(abs_1_zmienna,abs_1_tekst,strlen(abs_1_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_1_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		
	

//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL abs_2_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_2_tekst) + 1); //text size + \0 character
    memcpy(abs_2_zmienna,abs_2_tekst,strlen(abs_2_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_2_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL abs_3_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_3_tekst) + 1); //text size + \0 character
    memcpy(abs_3_zmienna,abs_3_tekst,strlen(abs_3_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_3_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL abs_4_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_4_tekst) + 1); //text size + \0 character
    memcpy(abs_4_zmienna,abs_4_tekst,strlen(abs_4_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_4_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


}
//---------------------------------------------------------------------------	
//TWORZENIE MATERIAŁU - DANE PODTSAWOWE 2 - KONIEC


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//WYRÓB GOTOWY


//TWORZENIE MATERIAŁU - KLASYFIKACJA - POCZĄTEK
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
       
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
	
    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	


//KLIKANIE W POLE SAP
//---------------------------------------------------------------------------
SetCursorPos( KLASYFIKACJA_ZAZNACZANIE_KLASY );
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0); 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//KLIKANIE W POLE SAP
//---------------------------------------------------------------------------
SetCursorPos( KLASYFIKACJA_USUWANIE_KLASY );
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0); 


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_KLASYFIKACJA_USUWANIE_MATERIALU_OS_X;
os_y = TWORZENIE_MATERIALU_KLASYFIKACJA_USUWANIE_MATERIALU_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

//WCISKANIE - PGDN - PAGE DOWN
//---------------------------------------------------------------------------
keybd_event(0x22, 0, 0, 0); // PAGE DOWN	
keybd_event(0x22, 0, KEYEVENTF_KEYUP, 0); // PAGE DOWN
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - STRZAŁKA W DÓŁ
//---------------------------------------------------------------------------
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ     
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE MATERIAŁU - KLASYFIKACJA - NAZWA RYSUNKU - POCZĄTEK
//---------------------------------------------------------------------------
if (nazwa_rysunku != "0") {


{
    HGLOBAL nazwa_rysunku_zmienna = GlobalAlloc(GMEM_FIXED,strlen(nazwa_rysunku_tekst) + 1); //text size + \0 character
    memcpy(nazwa_rysunku_zmienna,nazwa_rysunku_tekst,strlen(nazwa_rysunku_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,nazwa_rysunku_zmienna);
        CloseClipboard();
    }
}

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

	// Wklejam nowy indeks MATERIAŁU
    keybd_event(0x11, 0, 0, 0); // CRTL
	keybd_event(0x56, 0, 0, 0); // V	 
	keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
	keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


    keybd_event(0x0D, 0, 0, 0); // ENTER
    keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

}
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - KLASYFIKACJA - NAZWA RYSUNKU - KONIEC


//WCISKANIE - PGDN - PAGE DOWN
//---------------------------------------------------------------------------
keybd_event(0x22, 0, 0, 0); // PAGE DOWN	
keybd_event(0x22, 0, KEYEVENTF_KEYUP, 0); // PAGE DOWN
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE MATERIAŁU - KLASYFIKACJA - DODATKOWE POLA - POCZĄTEK
//---------------------------------------------------------------------------
if (dl_frez_fdolno != "0" or il_wiercen != "0" or dl_frez_dia != "0" or dl_frez_pila != "0" or dl_oprosto != "0"
    and il_oprosto != "0" or dl_okrzywo != "0" or il_okrzywo != "0") {


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_frez_fdolno_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_frez_fdolno_tekst) + 1); //text size + \0 character
    memcpy(dl_frez_fdolno_zmienna,dl_frez_fdolno_tekst,strlen(dl_frez_fdolno_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_frez_fdolno_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL il_wiercen_zmienna = GlobalAlloc(GMEM_FIXED,strlen(il_wiercen_tekst) + 1); //text size + \0 character
    memcpy(il_wiercen_zmienna,il_wiercen_tekst,strlen(il_wiercen_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,il_wiercen_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_frez_dia_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_frez_dia_tekst) + 1); //text size + \0 character
    memcpy(dl_frez_dia_zmienna,dl_frez_dia_tekst,strlen(dl_frez_dia_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_frez_dia_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_frez_pila_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_frez_pila_tekst) + 1); //text size + \0 character
    memcpy(dl_frez_pila_zmienna,dl_frez_pila_tekst,strlen(dl_frez_pila_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_frez_pila_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_oprosto_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_oprosto_tekst) + 1); //text size + \0 character
    memcpy(dl_oprosto_zmienna,dl_oprosto_tekst,strlen(dl_oprosto_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_oprosto_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL il_oprosto_zmienna = GlobalAlloc(GMEM_FIXED,strlen(il_oprosto_tekst) + 1); //text size + \0 character
    memcpy(il_oprosto_zmienna,il_oprosto_tekst,strlen(il_oprosto_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,il_oprosto_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V  

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_okrzywo_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_okrzywo_tekst) + 1); //text size + \0 character
    memcpy(dl_okrzywo_zmienna,dl_okrzywo_tekst,strlen(dl_okrzywo_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_okrzywo_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL il_okrzywo_zmienna = GlobalAlloc(GMEM_FIXED,strlen(il_okrzywo_tekst) + 1); //text size + \0 character
    memcpy(il_okrzywo_zmienna,il_okrzywo_tekst,strlen(il_okrzywo_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,il_okrzywo_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
}
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - KLASYFIKACJA - DODATKOWE POLA - KONIEC	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - F8 (PRZEJŚCIE DO: MRP1)
//---------------------------------------------------------------------------
keybd_event(0x77, 0, 0, 0); // F8	 
keybd_event(0x77, 0, KEYEVENTF_KEYUP, 0); // F8 


//TWORZENIE MATERIAŁU - MRP1
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_MRP1_OS_X;
os_y = TWORZENIE_MATERIALU_MRP1_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}   
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_ZAPISANIE_OS_X;
os_y = TWORZENIE_MATERIALU_ZAPISANIE_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	
	

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	
	

//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3


std::cout<<"TAK"<<std::endl;    
 
      
}
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - 30 (PÓŁFABRYKATY)


//===========================================================================


//TWORZENIE MATERIAŁU - 40 (PACZKI)
//---------------------------------------------------------------------------
else if (tworzenie_materialu == "t" and rodzaj_materialu == "40")
{

//TWORZENIE MATERIAŁU - KANAŁ DYSTRYBUCJI - KR
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
   
         
do
{     
          
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_1); 	
//---------------------------------------------------------------------------


//KLIKANIE W OKNO POLECEŃ SAP
//---------------------------------------------------------------------------
SetCursorPos( POZYCJA_OKIENKA_1 ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WPISYWANIE - MM01 (TWORZENIE MATERIAŁU)
//---------------------------------------------------------------------------
keybd_event(0x4D, 0, 0, 0); // M	       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M
keybd_event(0x4D, 0, 0, 0); // M	       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M  
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1	       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER   
    
    
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
         
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_2); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_zmienna,material_nowy_tekst,strlen(material_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

    
//WPISYWANIE - B
//---------------------------------------------------------------------------
keybd_event(0x42, 0, 0, 0); // B	 
keybd_event(0x42, 0, KEYEVENTF_KEYUP, 0); // B 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - ELEMENTY
//---------------------------------------------------------------------------
keybd_event(0x50, 0, 0, 0); // P  
keybd_event(0x50, 0, KEYEVENTF_KEYUP, 0); // P
keybd_event(0x41, 0, 0, 0); // A 
keybd_event(0x41, 0, KEYEVENTF_KEYUP, 0); // A 
keybd_event(0x43, 0, 0, 0); // C  
keybd_event(0x43, 0, KEYEVENTF_KEYUP, 0); // C 
keybd_event(0x5A, 0, 0, 0); // Z  
keybd_event(0x5A, 0, KEYEVENTF_KEYUP, 0); // Z 
keybd_event(0x4B, 0, 0, 0); // K  
keybd_event(0x4B, 0, KEYEVENTF_KEYUP, 0); // K 
keybd_event(0x49, 0, 0, 0); // I  
keybd_event(0x49, 0, KEYEVENTF_KEYUP, 0); // I 
	

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------  
	keybd_event(0x09, 0, 0, 0); // TAB	 
	keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
	keybd_event(0x09, 0, 0, 0); // TAB	 
	keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_wzorzec_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_wzorzec_tekst) + 1); //text size + \0 character
    memcpy(material_wzorzec_zmienna,material_wzorzec_tekst,strlen(material_wzorzec_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_wzorzec_zmienna);
        CloseClipboard();
    }
}

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V   


	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER         
 

//TWORZENIE MATERIAŁU - WYBÓR WGLĄDÓW
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_WYBOR_WGLADOW_OS_X;
os_y = TWORZENIE_MATERIALU_WYBOR_WGLADOW_OS_Y;
       
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);


    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - STRZAŁKA W DÓŁ
//---------------------------------------------------------------------------
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ     
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}   


//WCISKANIE - F9 (ZAZNACZANIE PÓL)
//---------------------------------------------------------------------------    
keybd_event(0x78, 0, 0, 0); // F9	 
keybd_event(0x78, 0, KEYEVENTF_KEYUP, 0); // F9   


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 
  
  
keybd_event(0x78, 0, 0, 0); // F9	 
keybd_event(0x78, 0, KEYEVENTF_KEYUP, 0); // F9  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 
  
    
keybd_event(0x78, 0, 0, 0); // F9	 
keybd_event(0x78, 0, KEYEVENTF_KEYUP, 0); // F9 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 
    
    
//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------    
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}           
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


//TWORZENIE MATERIAŁU - POZIOMY ORGANIZACYJNE
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_POZIOMY_ORGANIZACYJNE_OS_X;
os_y = TWORZENIE_MATERIALU_POZIOMY_ORGANIZACYJNE_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WPISYWANIE - WG11
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x57, 0, 0, 0); // W       
keybd_event(0x57, 0, KEYEVENTF_KEYUP, 0); // W
keybd_event(0x47, 0, 0, 0); // G       
keybd_event(0x47, 0, KEYEVENTF_KEYUP, 0); // G 
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WPISYWANIE - KR
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x4B, 0, 0, 0); // K       
keybd_event(0x4B, 0, KEYEVENTF_KEYUP, 0); // K
keybd_event(0x52, 0, 0, 0); // R       
keybd_event(0x52, 0, KEYEVENTF_KEYUP, 0); // R 
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WPISYWANIE - WG11
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x57, 0, 0, 0); // W       
keybd_event(0x57, 0, KEYEVENTF_KEYUP, 0); // W
keybd_event(0x47, 0, 0, 0); // G       
keybd_event(0x47, 0, KEYEVENTF_KEYUP, 0); // G 
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  	


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
	

//TWORZENIE MATERIAŁU - DANE PODSTAWOWE_1	
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_X;
os_y = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nazwa_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nazwa_tekst) + 1); //text size + \0 character
    memcpy(material_nazwa_zmienna,material_nazwa_tekst,strlen(material_nazwa_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nazwa_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL
keybd_event(0x56, 0, 0, 0); // V	  
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


// TWORZENIE MATERIAŁU - DANE DODATKOWE - POCZĄTEK
//---------------------------------------------------------------------------
if (szerokosc != "0" or dlugosc != "0" or wysokosc != "0" or waga != "0") {

if (szerokosc == "0") {
szerokosc = " ";
}

if (dlugosc == "0") {
dlugosc = " ";
}

if (wysokosc == "0") {
wysokosc = " ";
}

if (waga == "0") {
waga = " ";
}

//WCISKANIE - CTRL+F6 (PRZEJŚCIE DO: DANE DODATKOWE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL
keybd_event(0x75, 0, 0, 0); // F6	  
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x75, 0, KEYEVENTF_KEYUP, 0); // F6 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - F6 (PRZEJŚCIE DO: JEDNOSTKI MIARY)
//---------------------------------------------------------------------------
keybd_event(0x75, 0, 0, 0); // F6	    
keybd_event(0x75, 0, KEYEVENTF_KEYUP, 0); // F6 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dlugosc_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dlugosc_tekst) + 1); //text size + \0 character
    memcpy(dlugosc_zmienna,dlugosc_tekst,strlen(dlugosc_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dlugosc_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL szerokosc_zmienna = GlobalAlloc(GMEM_FIXED,strlen(szerokosc_tekst) + 1); //text size + \0 character
    memcpy(szerokosc_zmienna,szerokosc_tekst,strlen(szerokosc_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,szerokosc_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL wysokosc_zmienna = GlobalAlloc(GMEM_FIXED,strlen(wysokosc_tekst) + 1); //text size + \0 character
    memcpy(wysokosc_zmienna,wysokosc_tekst,strlen(wysokosc_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,wysokosc_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//WCISKANIE - BACKSPACE
//---------------------------------------------------------------------------
keybd_event(0x08, 0, 0, 0); // BACKSPACE            
keybd_event(0x08, 0, KEYEVENTF_KEYUP, 0); // BACKSPACE 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER     


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL waga_zmienna = GlobalAlloc(GMEM_FIXED,strlen(waga_tekst) + 1); //text size + \0 character
    memcpy(waga_zmienna,waga_tekst,strlen(waga_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,waga_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL waga_zmienna = GlobalAlloc(GMEM_FIXED,strlen(waga_tekst) + 1); //text size + \0 character
    memcpy(waga_zmienna,waga_tekst,strlen(waga_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,waga_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	

	
//WCISKANIE - CTRL+F3 (PRZEJŚCIE DO: DANE GŁÓWNE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x72, 0, 0, 0); // F3	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_X;
os_y = TWORZENIE_MATERIALU_DANE_PODSTAWOWE_1_OS_Y;	
      
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


}
//---------------------------------------------------------------------------
// TWORZENIE MATERIAŁU - DANE DODATKOWE - KONIEC


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE MATERIAŁU - DANE PODTSAWOWE 2 - POCZĄTEK
//--------------------------------------------------------------------------- 
if (abs_1 != "0" or abs_2 != "0" or abs_3 != "0" or abs_4 != "0") {

if (abs_1 == "0") {
abs_1 = " ";
}

if (abs_2 == "0") {
abs_2 = " ";
}

if (abs_3 == "0") {
abs_3 = " ";
}

if (abs_4 == "0") {
abs_4 = " ";
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	
	

//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------	
{
    HGLOBAL abs_1_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_1_tekst) + 1); //text size + \0 character
    memcpy(abs_1_zmienna,abs_1_tekst,strlen(abs_1_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_1_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}		
	

//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL abs_2_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_2_tekst) + 1); //text size + \0 character
    memcpy(abs_2_zmienna,abs_2_tekst,strlen(abs_2_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_2_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL abs_3_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_3_tekst) + 1); //text size + \0 character
    memcpy(abs_3_zmienna,abs_3_tekst,strlen(abs_3_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_3_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL abs_4_zmienna = GlobalAlloc(GMEM_FIXED,strlen(abs_4_tekst) + 1); //text size + \0 character
    memcpy(abs_4_zmienna,abs_4_tekst,strlen(abs_4_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,abs_4_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
}
//---------------------------------------------------------------------------	
//TWORZENIE MATERIAŁU - DANE PODTSAWOWE 2 - KONIEC


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WYRÓB GOTOWY



//TWORZENIE MATERIAŁU - KLASYFIKACJA - POCZĄTEK
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
       
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
	
    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	


//KLIKANIE W POLE SAP
//---------------------------------------------------------------------------
SetCursorPos( KLASYFIKACJA_ZAZNACZANIE_KLASY );
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0); 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//KLIKANIE W POLE SAP
//---------------------------------------------------------------------------
SetCursorPos( KLASYFIKACJA_USUWANIE_KLASY );
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0); 
    

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_KLASYFIKACJA_USUWANIE_MATERIALU_OS_X;
os_y = TWORZENIE_MATERIALU_KLASYFIKACJA_USUWANIE_MATERIALU_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

//WCISKANIE - PGDN - PAGE DOWN
//---------------------------------------------------------------------------
keybd_event(0x22, 0, 0, 0); // PAGE DOWN	
keybd_event(0x22, 0, KEYEVENTF_KEYUP, 0); // PAGE DOWN
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - STRZAŁKA W DÓŁ
//---------------------------------------------------------------------------
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ     
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE MATERIAŁU - KLASYFIKACJA - NAZWA RYSUNKU - POCZĄTEK
//---------------------------------------------------------------------------
if (nazwa_rysunku != "0") {


{
    HGLOBAL nazwa_rysunku_zmienna = GlobalAlloc(GMEM_FIXED,strlen(nazwa_rysunku_tekst) + 1); //text size + \0 character
    memcpy(nazwa_rysunku_zmienna,nazwa_rysunku_tekst,strlen(nazwa_rysunku_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,nazwa_rysunku_zmienna);
        CloseClipboard();
    }
}

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

	// Wklejam nowy indeks MATERIAŁU
    keybd_event(0x11, 0, 0, 0); // CRTL
	keybd_event(0x56, 0, 0, 0); // V	 
	keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
	keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


    keybd_event(0x0D, 0, 0, 0); // ENTER
    keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

}
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - KLASYFIKACJA - NAZWA RYSUNKU - KONIEC


//WCISKANIE - PGDN - PAGE DOWN
//---------------------------------------------------------------------------
keybd_event(0x22, 0, 0, 0); // PAGE DOWN	
keybd_event(0x22, 0, KEYEVENTF_KEYUP, 0); // PAGE DOWN
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//TWORZENIE MATERIAŁU - KLASYFIKACJA - DODATKOWE POLA - POCZĄTEK
//---------------------------------------------------------------------------
if (dl_frez_fdolno != "0" or il_wiercen != "0" or dl_frez_dia != "0" or dl_frez_pila != "0" or dl_oprosto != "0"
    and il_oprosto != "0" or dl_okrzywo != "0" or il_okrzywo != "0") {


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_frez_fdolno_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_frez_fdolno_tekst) + 1); //text size + \0 character
    memcpy(dl_frez_fdolno_zmienna,dl_frez_fdolno_tekst,strlen(dl_frez_fdolno_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_frez_fdolno_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL il_wiercen_zmienna = GlobalAlloc(GMEM_FIXED,strlen(il_wiercen_tekst) + 1); //text size + \0 character
    memcpy(il_wiercen_zmienna,il_wiercen_tekst,strlen(il_wiercen_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,il_wiercen_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_frez_dia_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_frez_dia_tekst) + 1); //text size + \0 character
    memcpy(dl_frez_dia_zmienna,dl_frez_dia_tekst,strlen(dl_frez_dia_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_frez_dia_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_frez_pila_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_frez_pila_tekst) + 1); //text size + \0 character
    memcpy(dl_frez_pila_zmienna,dl_frez_pila_tekst,strlen(dl_frez_pila_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_frez_pila_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_oprosto_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_oprosto_tekst) + 1); //text size + \0 character
    memcpy(dl_oprosto_zmienna,dl_oprosto_tekst,strlen(dl_oprosto_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_oprosto_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL il_oprosto_zmienna = GlobalAlloc(GMEM_FIXED,strlen(il_oprosto_tekst) + 1); //text size + \0 character
    memcpy(il_oprosto_zmienna,il_oprosto_tekst,strlen(il_oprosto_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,il_oprosto_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V  

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL dl_okrzywo_zmienna = GlobalAlloc(GMEM_FIXED,strlen(dl_okrzywo_tekst) + 1); //text size + \0 character
    memcpy(dl_okrzywo_zmienna,dl_okrzywo_tekst,strlen(dl_okrzywo_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,dl_okrzywo_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL il_okrzywo_zmienna = GlobalAlloc(GMEM_FIXED,strlen(il_okrzywo_tekst) + 1); //text size + \0 character
    memcpy(il_okrzywo_zmienna,il_okrzywo_tekst,strlen(il_okrzywo_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,il_okrzywo_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 

	
}
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - KLASYFIKACJA - DODATKOWE POLA - KONIEC	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - F8 (PRZEJŚCIE DO: MRP1)
//---------------------------------------------------------------------------
keybd_event(0x77, 0, 0, 0); // F8	 
keybd_event(0x77, 0, KEYEVENTF_KEYUP, 0); // F8 


//TWORZENIE MATERIAŁU - MRP1
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_MRP1_OS_X;
os_y = TWORZENIE_MATERIALU_MRP1_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - 2
//---------------------------------------------------------------------------
keybd_event(0x32, 0, 0, 0); // 2	 
keybd_event(0x32, 0, KEYEVENTF_KEYUP, 0); // 2 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WPISYWANIE - 0002
//---------------------------------------------------------------------------
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0  
keybd_event(0x32, 0, 0, 0); // 2	 
keybd_event(0x32, 0, KEYEVENTF_KEYUP, 0); // 2 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_ZAPISANIE_OS_X;
os_y = TWORZENIE_MATERIALU_ZAPISANIE_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	
	

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	

//---------------------------------------------------------------------------		
//TWORZENIE MATERIAŁU - KANAŁ DYSTRYBUCJI - KR


//TWORZENIE MATERIAŁU - KANAŁ DYSTRYBUCJI - EX
//---------------------------------------------------------------------------

//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_zmienna,material_nowy_tekst,strlen(material_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

    
//WPISYWANIE - B
//---------------------------------------------------------------------------
keybd_event(0x42, 0, 0, 0); // B	 
keybd_event(0x42, 0, KEYEVENTF_KEYUP, 0); // B 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - ELEMENTY
//---------------------------------------------------------------------------
keybd_event(0x50, 0, 0, 0); // P  
keybd_event(0x50, 0, KEYEVENTF_KEYUP, 0); // P
keybd_event(0x41, 0, 0, 0); // A 
keybd_event(0x41, 0, KEYEVENTF_KEYUP, 0); // A 
keybd_event(0x43, 0, 0, 0); // C  
keybd_event(0x43, 0, KEYEVENTF_KEYUP, 0); // C 
keybd_event(0x5A, 0, 0, 0); // Z  
keybd_event(0x5A, 0, KEYEVENTF_KEYUP, 0); // Z 
keybd_event(0x4B, 0, 0, 0); // K  
keybd_event(0x4B, 0, KEYEVENTF_KEYUP, 0); // K 
keybd_event(0x49, 0, 0, 0); // I  
keybd_event(0x49, 0, KEYEVENTF_KEYUP, 0); // I 
	

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------  
	keybd_event(0x09, 0, 0, 0); // TAB	 
	keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
	keybd_event(0x09, 0, 0, 0); // TAB	 
	keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - BACKSPACE
//---------------------------------------------------------------------------
keybd_event(0x08, 0, 0, 0); // BACKSPACE            
keybd_event(0x08, 0, KEYEVENTF_KEYUP, 0); // BACKSPACE 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER         
 

//TWORZENIE MATERIAŁU - WYBÓR WGLĄDÓW
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_WYBOR_WGLADOW_OS_X;
os_y = TWORZENIE_MATERIALU_WYBOR_WGLADOW_OS_Y;
       
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);


    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------
   

//WCISKANIE - STRZAŁKA W DÓŁ
//---------------------------------------------------------------------------
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ     
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}   


//WCISKANIE - F9 (ZAZNACZANIE PÓL)
//---------------------------------------------------------------------------    
keybd_event(0x78, 0, 0, 0); // F9	 
keybd_event(0x78, 0, KEYEVENTF_KEYUP, 0); // F9   


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 
  
  
keybd_event(0x78, 0, 0, 0); // F9	 
keybd_event(0x78, 0, KEYEVENTF_KEYUP, 0); // F9  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 
  
    
keybd_event(0x78, 0, 0, 0); // F9	 
keybd_event(0x78, 0, KEYEVENTF_KEYUP, 0); // F9 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 
    
    
//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------    
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}           
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//TWORZENIE MATERIAŁU - POZIOMY ORGANIZACYJNE
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_POZIOMY_ORGANIZACYJNE_OS_X;
os_y = TWORZENIE_MATERIALU_POZIOMY_ORGANIZACYJNE_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WPISYWANIE - WG11
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x57, 0, 0, 0); // W       
keybd_event(0x57, 0, KEYEVENTF_KEYUP, 0); // W
keybd_event(0x47, 0, 0, 0); // G       
keybd_event(0x47, 0, KEYEVENTF_KEYUP, 0); // G 
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WPISYWANIE - KR
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x45, 0, 0, 0); // E       
keybd_event(0x45, 0, KEYEVENTF_KEYUP, 0); // E
keybd_event(0x58, 0, 0, 0); // X       
keybd_event(0x58, 0, KEYEVENTF_KEYUP, 0); // X 
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
	

//TWORZENIE MATERIAŁU - DZIAŁ SPRZEDAŻY 1	
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_DZIAL_SPRZEDAZY_1_OS_X;
os_y = TWORZENIE_MATERIALU_DZIAL_SPRZEDAZY_1_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------
    
    
//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
} 


//WPISYWANIE - 0002
//---------------------------------------------------------------------------
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0  
keybd_event(0x32, 0, 0, 0); // 2	 
keybd_event(0x32, 0, KEYEVENTF_KEYUP, 0); // 2 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    

    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  
  
   
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_ZAPISANIE_OS_X;
os_y = TWORZENIE_MATERIALU_ZAPISANIE_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	
	
	
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


pauza = 1;
while( pauza <= max_etapy )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - KANAŁ DYSTRYBUCJI - EX


//TWORZENIE MATERIAŁU - KANAŁ DYSTRYBUCJI - UE
//---------------------------------------------------------------------------

//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_zmienna,material_nowy_tekst,strlen(material_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

    
//WPISYWANIE - B
//---------------------------------------------------------------------------
keybd_event(0x42, 0, 0, 0); // B	 
keybd_event(0x42, 0, KEYEVENTF_KEYUP, 0); // B 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - ELEMENTY
//---------------------------------------------------------------------------
keybd_event(0x50, 0, 0, 0); // P  
keybd_event(0x50, 0, KEYEVENTF_KEYUP, 0); // P
keybd_event(0x41, 0, 0, 0); // A 
keybd_event(0x41, 0, KEYEVENTF_KEYUP, 0); // A 
keybd_event(0x43, 0, 0, 0); // C  
keybd_event(0x43, 0, KEYEVENTF_KEYUP, 0); // C 
keybd_event(0x5A, 0, 0, 0); // Z  
keybd_event(0x5A, 0, KEYEVENTF_KEYUP, 0); // Z 
keybd_event(0x4B, 0, 0, 0); // K  
keybd_event(0x4B, 0, KEYEVENTF_KEYUP, 0); // K 
keybd_event(0x49, 0, 0, 0); // I  
keybd_event(0x49, 0, KEYEVENTF_KEYUP, 0); // I 
	

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------  
	keybd_event(0x09, 0, 0, 0); // TAB	 
	keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
	keybd_event(0x09, 0, 0, 0); // TAB	 
	keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - BACKSPACE
//---------------------------------------------------------------------------
keybd_event(0x08, 0, 0, 0); // BACKSPACE            
keybd_event(0x08, 0, KEYEVENTF_KEYUP, 0); // BACKSPACE 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER         
 
 
//TWORZENIE MATERIAŁU - WYBÓR WGLĄDÓW
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_WYBOR_WGLADOW_OS_X;
os_y = TWORZENIE_MATERIALU_WYBOR_WGLADOW_OS_Y;
       
         
do
{           
    HDC hdc = GetDC(NULL);
    DWORD color = GetPixel(hdc, os_x, os_y);
    unsigned int rr = GetRValue(color);
    unsigned int gg = GetGValue(color);
    unsigned int bb = GetBValue(color);


    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------
   
    
//WCISKANIE - STRZAŁKA W DÓŁ
//---------------------------------------------------------------------------
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ     
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}   


//WCISKANIE - F9 (ZAZNACZANIE PÓL)
//---------------------------------------------------------------------------    
keybd_event(0x78, 0, 0, 0); // F9	 
keybd_event(0x78, 0, KEYEVENTF_KEYUP, 0); // F9   


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 
  
  
keybd_event(0x78, 0, 0, 0); // F9	 
keybd_event(0x78, 0, KEYEVENTF_KEYUP, 0); // F9  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 
  
    
keybd_event(0x78, 0, 0, 0); // F9	 
keybd_event(0x78, 0, KEYEVENTF_KEYUP, 0); // F9 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 
    
    
//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------    
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}           
    

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//TWORZENIE MATERIAŁU - POZIOMY ORGANIZACYJNE
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_POZIOMY_ORGANIZACYJNE_OS_X;
os_y = TWORZENIE_MATERIALU_POZIOMY_ORGANIZACYJNE_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WPISYWANIE - WG11
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x57, 0, 0, 0); // W       
keybd_event(0x57, 0, KEYEVENTF_KEYUP, 0); // W
keybd_event(0x47, 0, 0, 0); // G       
keybd_event(0x47, 0, KEYEVENTF_KEYUP, 0); // G 
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WPISYWANIE - KR
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x55, 0, 0, 0); // U       
keybd_event(0x55, 0, KEYEVENTF_KEYUP, 0); // U
keybd_event(0x45, 0, 0, 0); // E       
keybd_event(0x45, 0, KEYEVENTF_KEYUP, 0); // E
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}  


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//TWORZENIE MATERIAŁU - DZIAŁ SPRZEDAŻY 1	
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_DZIAL_SPRZEDAZY_1_OS_X;
os_y = TWORZENIE_MATERIALU_DZIAL_SPRZEDAZY_1_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB      
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
} 


//WPISYWANIE - 0002
//---------------------------------------------------------------------------
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0  
keybd_event(0x32, 0, 0, 0); // 2	 
keybd_event(0x32, 0, KEYEVENTF_KEYUP, 0); // 2 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    

    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  

   
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_MATERIALU_ZAPISANIE_OS_X;
os_y = TWORZENIE_MATERIALU_ZAPISANIE_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	
	

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  

//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - KANAŁ DYSTRYBUCJI - UE


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	
	

//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3
    

std::cout<<"TAK"<<std::endl;    
    
    
}
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU - 40 (PACZKI)


else
{
    
std::cout<<"NIE"<<std::endl;
    
}


plik <<"---------------------------------------------------------------------------"<<endl;
plik << "1. Tworzenie materiału: " << tworzenie_materialu << endl;
//---------------------------------------------------------------------------
//TWORZENIE MATERIAŁU 


//===========================================================================


//TWORZENIE PROFILU KONFIGURACJI
//---------------------------------------------------------------------------

std::cout<<"2. Tworzenie profilu konfiguracji: ";


if (tworzenie_profilu_konfiguracji == "t")
{

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
        os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
        os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
       
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_1); 	
//---------------------------------------------------------------------------


//KLIKANIE W OKNO POLECEŃ SAP
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0xBF, 0, 0, 0); // /            
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0xBF, 0, KEYEVENTF_KEYUP, 0); // /


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WPISYWANIE - CU41
//---------------------------------------------------------------------------
keybd_event(0x43, 0, 0, 0); // C	       
keybd_event(0x43, 0, KEYEVENTF_KEYUP, 0); // C
keybd_event(0x55, 0, 0, 0); // U	       
keybd_event(0x55, 0, KEYEVENTF_KEYUP, 0); // U  
keybd_event(0x34, 0, 0, 0); // 4	       
keybd_event(0x34, 0, KEYEVENTF_KEYUP, 0); // 4 
keybd_event(0x31, 0, 0, 0); // 1	       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
   
  
//WCISKANIE - ENTER
//---------------------------------------------------------------------------  
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER     


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
    
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
  
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_2); 	
//---------------------------------------------------------------------------


//KLIKANIE W POLE SAP
//---------------------------------------------------------------------------
SetCursorPos( PROFIL_KONFIGURACJI_WYBOR_OBIEKTOW_KONFIGUROWALNYCH ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;  
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------	
{
    HGLOBAL material_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_zmienna,material_nowy_tekst,strlen(material_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - F5
//--------------------------------------------------------------------------- 
keybd_event(0x74, 0, 0, 0); // F5
keybd_event(0x74, 0, KEYEVENTF_KEYUP, 0); // F5  
      
    
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = PROFIL_KONFIGURACJI_KOPIOWANIE_WZORCA_OS_X;
os_y = PROFIL_KONFIGURACJI_KOPIOWANIE_WZORCA_OS_Y;
    
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_wzorzec_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_wzorzec_tekst) + 1); //text size + \0 character
    memcpy(material_wzorzec_zmienna,material_wzorzec_tekst,strlen(material_wzorzec_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_wzorzec_zmienna);
        CloseClipboard();
    }
}

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V   


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER         
 
 
pauza = 1;
while( pauza <= max_etapy )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+S (ZAPISANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL	    
keybd_event(0x53, 0, 0, 0); // S	    
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x53, 0, KEYEVENTF_KEYUP, 0); // S    
	
	
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	
	

//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3 
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3 

    
std::cout<<"TAK"<<std::endl;    
    
    
}


else
{
    
    std::cout<<"NIE"<<std::endl;

}


plik << "2. Tworzenie profilu konfiguracji: " << tworzenie_profilu_konfiguracji << endl;
//---------------------------------------------------------------------------
//TWORZENIE PROFILU KONFIGURACJI


//===========================================================================
	
	
//TWORZENIE KLASY	
//---------------------------------------------------------------------------
std::cout<<"3. Tworzenie klasy: ";


if (tworzenie_klasy == "t")
{
    
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
 
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_1); 	
//---------------------------------------------------------------------------

  
//KLIKANIE W OKNO POLECEŃ SAP
//---------------------------------------------------------------------------
SetCursorPos( POZYCJA_OKIENKA_1 ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);
     
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    


//WPISYWANIE - CL01
//---------------------------------------------------------------------------
keybd_event(0x43, 0, 0, 0); // C	       
keybd_event(0x43, 0, KEYEVENTF_KEYUP, 0); // C 
keybd_event(0x4C, 0, 0, 0); // L	       
keybd_event(0x4C, 0, KEYEVENTF_KEYUP, 0); // L 
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1	       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//--------------------------------------------------------------------------- 
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  
    
    
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
   
    a = rr;
    b = gg;
    c = bb;

    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_2); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL klasa_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(klasa_nowy_tekst) + 1); //text size + \0 character
    memcpy(klasa_nowy_zmienna,klasa_nowy_tekst,strlen(klasa_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,klasa_nowy_zmienna);
        CloseClipboard();
    }
}

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

	
//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V   

 
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - STRZŁKA W DÓŁ
//---------------------------------------------------------------------------
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+A (ZAZNACZANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL	     
keybd_event(0x41, 0, 0, 0); // A	   
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL  
keybd_event(0x41, 0, KEYEVENTF_KEYUP, 0); // A    
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WPISYWANIE - 300
//---------------------------------------------------------------------------
	keybd_event(0x33, 0, 0, 0); // 3	 
	keybd_event(0x33, 0, KEYEVENTF_KEYUP, 0); // 3  
	keybd_event(0x30, 0, 0, 0); // 0	 
	keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
	keybd_event(0x30, 0, 0, 0); // 0	 
	keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - STRZAŁKA DO GÓRY
//---------------------------------------------------------------------------
keybd_event(0x26, 0, 0, 0); // STRZAŁKA DO GÓRY           
keybd_event(0x26, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA DO GÓRY 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_KLASY_WZORZEC_KLASA_OS_X;
os_y = TWORZENIE_KLASY_WZORZEC_KLASA_OS_Y;
      
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
  
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1);   
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL klasa_wzorzec_zmienna = GlobalAlloc(GMEM_FIXED,strlen(klasa_wzorzec_tekst) + 1); //text size + \0 character
    memcpy(klasa_wzorzec_zmienna,klasa_wzorzec_tekst,strlen(klasa_wzorzec_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,klasa_wzorzec_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

	
//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL
keybd_event(0x56, 0, 0, 0); // V	  
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V  
 
 
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}
  

//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER         
 
 
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}
  
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------    
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER         
 
 
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nazwa_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nazwa_tekst) + 1); //text size + \0 character
    memcpy(material_nazwa_zmienna,material_nazwa_tekst,strlen(material_nazwa_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nazwa_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V  

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

	
//WCISKANIE - CTRL+S (ZAPISANIE)
//---------------------------------------------------------------------------

keybd_event(0x11, 0, 0, 0); // CTRL	  
keybd_event(0x53, 0, 0, 0); // S	    
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL    
keybd_event(0x53, 0, KEYEVENTF_KEYUP, 0); // S   
	

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3	

std::cout<<"TAK"<<std::endl;


}


else
{
    
std::cout<<"NIE"<<std::endl;
    
}


plik << "3. Tworzenie klasy: " << tworzenie_klasy << endl;
//---------------------------------------------------------------------------
//TWORZENIE KLASY


//===========================================================================


// PRZYPISANIE MATERIAŁU DO KLASY
//---------------------------------------------------------------------------
std::cout<<"4. Przypisanie materiału do klasy: ";


if (przypisanie_materialu_do_klasy == "t")
{
      
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
 
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
  
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_1); 	
//---------------------------------------------------------------------------   
    
    
//KLIKANIE W OKNO POLECEŃ SAP
//---------------------------------------------------------------------------
SetCursorPos( POZYCJA_OKIENKA_1 ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);
  
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    


//WPISYWANIE - CL24N
//---------------------------------------------------------------------------
keybd_event(0x43, 0, 0, 0); // C	       
keybd_event(0x43, 0, KEYEVENTF_KEYUP, 0); // C 
keybd_event(0x4C, 0, 0, 0); // L	       
keybd_event(0x4C, 0, KEYEVENTF_KEYUP, 0); // L 
keybd_event(0x32, 0, 0, 0); // 2	       
keybd_event(0x32, 0, KEYEVENTF_KEYUP, 0); // 2 
keybd_event(0x34, 0, 0, 0); // 4	       
keybd_event(0x34, 0, KEYEVENTF_KEYUP, 0); // 4 
keybd_event(0x4E, 0, 0, 0); // N	       
keybd_event(0x4E, 0, KEYEVENTF_KEYUP, 0); // N 

    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;  
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
 
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_2); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL klasa_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(klasa_nowy_tekst) + 1); //text size + \0 character
    memcpy(klasa_nowy_zmienna,klasa_nowy_tekst,strlen(klasa_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,klasa_nowy_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V  


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - 300
//---------------------------------------------------------------------------
keybd_event(0x33, 0, 0, 0); // 3	 
keybd_event(0x33, 0, KEYEVENTF_KEYUP, 0); // 3  
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0	 
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    
//WCISKANIE - CTRL+F9 (PRZEJŚCIE DO: TYLKO NOWE PRZYPISANIE)
//---------------------------------------------------------------------------    
    keybd_event(0x11, 0, 0, 0); // CTRL	      
	keybd_event(0x78, 0, 0, 0); // F9	   
	keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
	keybd_event(0x78, 0, KEYEVENTF_KEYUP, 0); // F9   
	

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
    
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
 
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - STRZŁKA W DÓŁ
//---------------------------------------------------------------------------
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ  
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_2);		
}
    
 
//WCISKANIE - ENTER
//---------------------------------------------------------------------------     
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER         
 

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = PRZYPISANIE_DO_KLASY_DODANIE_MATERIALU_OS_X;
os_y = PRZYPISANIE_DO_KLASY_DODANIE_MATERIALU_OS_Y;
    
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;

    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_1_RGB_1); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_zmienna,material_nowy_tekst,strlen(material_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
  
    
//WCISKANIE - CTRL+V - WKLEJANIE
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 
 
 
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+S (ZAPISANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL	  
keybd_event(0x53, 0, 0, 0); // S	    
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x53, 0, KEYEVENTF_KEYUP, 0); // S  
	

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
    
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
 
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3 


std::cout<<"TAK"<<std::endl;


}


else
{
    
    std::cout<<"NIE"<<std::endl;
    
}


plik << "4. Przypisanie materiału do klasy: " << przypisanie_materialu_do_klasy << endl;
//---------------------------------------------------------------------------
// PRZYPISANIE MATERIAŁU DO KLASY


//===========================================================================


// WYWOŁANIE OPRACOWANIA WLĄDU
//---------------------------------------------------------------------------
if (wywolanie_opracowania_wgladu == "t")
{
    
std::cout<<"5. Wywołanie opracowania wglądu - tabela ZLOVC_BOMPOS: ";


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
  
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_1); 	
//---------------------------------------------------------------------------


//KLIKANIE W OKNO POLECEŃ SAP
//---------------------------------------------------------------------------
SetCursorPos( POZYCJA_OKIENKA_1 ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    


//WPISYWANIE - SM30
//---------------------------------------------------------------------------
keybd_event(0x53, 0, 0, 0); // S	       
keybd_event(0x53, 0, KEYEVENTF_KEYUP, 0); // S 
keybd_event(0x4D, 0, 0, 0); // M	       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M 
keybd_event(0x33, 0, 0, 0); // 3	       
keybd_event(0x33, 0, KEYEVENTF_KEYUP, 0); // 3 
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = WYWOLANIE_OPRACOWANIA_WGLADOW_OS_X;
os_y = WYWOLANIE_OPRACOWANIA_WGLADOW_OS_Y;
   
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
 
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_3_RGB_1); 	
//---------------------------------------------------------------------------


//WPISYWANIE - ZLOVC_BOMPOS
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x5A, 0, 0, 0); // Z	       
keybd_event(0x5A, 0, KEYEVENTF_KEYUP, 0); // Z
keybd_event(0x4C, 0, 0, 0); // L      
keybd_event(0x4C, 0, KEYEVENTF_KEYUP, 0); // L 
keybd_event(0x4F, 0, 0, 0); // O       
keybd_event(0x4F, 0, KEYEVENTF_KEYUP, 0); // O 
keybd_event(0x56, 0, 0, 0); // V       
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V 
keybd_event(0x43, 0, 0, 0); // C       
keybd_event(0x43, 0, KEYEVENTF_KEYUP, 0); // C     
keybd_event(0xBD, 0, 0, 0); // -      
keybd_event(0xBD, 0, KEYEVENTF_KEYUP, 0); // -
keybd_event(0x42, 0, 0, 0); // B       
keybd_event(0x42, 0, KEYEVENTF_KEYUP, 0); // B 
keybd_event(0x4F, 0, 0, 0); // O       
keybd_event(0x4F, 0, KEYEVENTF_KEYUP, 0); // O
keybd_event(0x4D, 0, 0, 0); // M       
keybd_event(0x4D, 0, KEYEVENTF_KEYUP, 0); // M
keybd_event(0x50, 0, 0, 0); // P      
keybd_event(0x50, 0, KEYEVENTF_KEYUP, 0); // P
keybd_event(0x4F, 0, 0, 0); // O      
keybd_event(0x4F, 0, KEYEVENTF_KEYUP, 0); // O 
keybd_event(0x53, 0, 0, 0); // S       
keybd_event(0x53, 0, KEYEVENTF_KEYUP, 0); // S
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT 
 
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


string wynik;


string GetClipboardText();


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = WYWOLANIE_OPRACOWANIA_WGLADOW_TABELA_BOMPOS_OS_X;
os_y = WYWOLANIE_OPRACOWANIA_WGLADOW_TABELA_BOMPOS_OS_Y;
 

//WYWOŁANIE OPRACOWANIA WLĄDU - TABELA NIEDOSTĘPNA
//---------------------------------------------------------------------------  
do {
    
pauza = 1;
while( pauza <= max_bompos*3 )
{; 
	std::cout<<pauza<<" "; 
	pauza++;
    Sleep (CZAS_PAUZY_2);	 	
} 

	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
  

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
    

if (KOLOR_SZARY_4_RGB_1) {
        
        
std::cout<<" - TABELA NIEDOSTĘPNA";        
std::cout<<" "<<std::endl; 
std::cout<<"   Ponowne wejscie do tabeli: ";

        
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
   
   
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;  
	Sleep (CZAS_PAUZY_1);		
}   
 

//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB   
   
   
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}   
   

//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    
   
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}    
 
   
}

    
}  while (KOLOR_SZARY_4_RGB_1);
//---------------------------------------------------------------------------
//WYWOŁANIE OPRACOWANIA WLĄDU - TABELA NIEDOSTĘPNA


//WYWOŁANIE OPRACOWANIA WLĄDU - TABELA DOSTĘPNA
//--------------------------------------------------------------------------- 
std::cout<<" - TABELA DOSTĘPNA";    
    

pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


std::cout<<" "<<std::endl;
std::cout<<"   Wywołanie opracowania wglądu: ";

    
//WCISKANIE - F5 (PRZEJŚCIE DO: NOWE WPISY)
keybd_event(0x74, 0, 0, 0); // F5
keybd_event(0x74, 0, KEYEVENTF_KEYUP, 0); // F5 
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL klasa_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(klasa_nowy_tekst) + 1); //text size + \0 character
    memcpy(klasa_nowy_zmienna,klasa_nowy_tekst,strlen(klasa_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,klasa_nowy_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V - WKLEJANIE
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V   


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB  
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_zmienna,material_nowy_tekst,strlen(material_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_zmienna);
        CloseClipboard();
    }
}   

    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V - WKLEJANIE
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V   
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;  
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
  
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}   


//WCISKANIE - LEWY SHIFT+X
//---------------------------------------------------------------------------
	keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
	keybd_event(0x58, 0, 0, 0); // X	      
	keybd_event(0x58, 0, KEYEVENTF_KEYUP, 0); // X
	keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  

	       
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}     
  
    	
//WCISKANIE - CTRL+S (ZAPISANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL	  
keybd_event(0x53, 0, 0, 0); // S	    
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x53, 0, KEYEVENTF_KEYUP, 0); // S  
	
	
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
 
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	
	
	
//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_2);		
} 


//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_2);		
}	


//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3	
	

std::cout<<"TAK"<<std::endl;


}


else
{
    
std::cout<<"4. Wywołanie opracowania wglądu: NIE"<<std::endl;
    
}


plik << "4. Wywołanie opracowania wglądu - ZLOVC_BOMPOS: " << wywolanie_opracowania_wgladu << endl;
//---------------------------------------------------------------------------
// WYWOŁANIE OPRACOWANIA WLĄDU


//===========================================================================


// TWORZENIE SPECYFIKACJI MATERIAŁOWEJ
//---------------------------------------------------------------------------
std::cout<<"5. Tworzenie specyfikacji materiałowej dla materiału: ";


if (tworzenie_specyfikacji_materialowej_dla_materialu == "t")
{
    
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
        
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
  
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_1); 	
//---------------------------------------------------------------------------


//KLIKANIE W OKNO POLECEŃ SAP
//---------------------------------------------------------------------------
SetCursorPos( POZYCJA_OKIENKA_1 ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}    


//WPISYWANIE - CS01
//---------------------------------------------------------------------------
keybd_event(0x43, 0, 0, 0); // C	       
keybd_event(0x43, 0, KEYEVENTF_KEYUP, 0); // C 
keybd_event(0x53, 0, 0, 0); // S	       
keybd_event(0x53, 0, KEYEVENTF_KEYUP, 0); // S 
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1	       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
    
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
  
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_2); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_zmienna,material_nowy_tekst,strlen(material_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_zmienna);
        CloseClipboard();
    }
}

    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V - WKLEJANIE
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V   

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
	keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
    keybd_event(0x59, 0, 0, 0); // Y	       
	keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
	keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
	keybd_event(0x30, 0, 0, 0); // 0	       
	keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
	keybd_event(0x30, 0, 0, 0); // 0	       
	keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
	keybd_event(0x31, 0, 0, 0); // 1	       
	keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
	

//WPISYWANIE - 1
//---------------------------------------------------------------------------	
keybd_event(0x31, 0, 0, 0); // 1	       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 	

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - F7 (PRZEJŚCIE DO: KOPIOWANIE WZORCA)
//---------------------------------------------------------------------------
keybd_event(0x76, 0, 0, 0); // F7	
keybd_event(0x76, 0, KEYEVENTF_KEYUP, 0); // F7
	

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_SPECYFIKACJI_MATERIALOWEJ_KOPIOWANIE_WZORCA_OS_X;
os_y = TWORZENIE_SPECYFIKACJI_MATERIALOWEJ_KOPIOWANIE_WZORCA_OS_Y;
  
       
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
  
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_wzorzec_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_wzorzec_tekst) + 1); //text size + \0 character
    memcpy(material_wzorzec_zmienna,material_wzorzec_tekst,strlen(material_wzorzec_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_wzorzec_zmienna);
        CloseClipboard();
    }
}

    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V - WKLEJANIE
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 
    

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = TWORZENIE_SPECYFIKACJI_MATERIALOWEJ_WZORZEC_OS_X;
os_y = TWORZENIE_SPECYFIKACJI_MATERIALOWEJ_WZORZEC_OS_Y;
     
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
 
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_4_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - CTRL+F3 (ZAZNACZANIE WSZYSTKICH)
//--------------------------------------------------------------------------- 
keybd_event(0x11, 0, 0, 0); // CRTL
keybd_event(0x72, 0, 0, 0); // F3	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CRTL  
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3  
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
} 

//WCISKANIE - F5 (KOPIOWANIE)
//--------------------------------------------------------------------------- 
keybd_event(0x74, 0, 0, 0); // F5         
keybd_event(0x74, 0, KEYEVENTF_KEYUP, 0); // F5 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
} 


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}     
    
    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER
  
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}   


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER
 
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
}   


string tworzenie_specyfikacji_materialowej_dla_materialu_zapisanie;
std::cout<<"Zapisać zmiany (t/n)? ";
std::cin>>tworzenie_specyfikacji_materialowej_dla_materialu_zapisanie;
std::cout<<"   Tworzenie specyfikacji materiałowej dla materiału: ";


if (tworzenie_specyfikacji_materialowej_dla_materialu_zapisanie == "t")
{
    
//KLIKANIE W PUSTE POLE SAP
//---------------------------------------------------------------------------
SetCursorPos( PUSTE_POLE_SAP_2 ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;
	Sleep (CZAS_PAUZY_1);		
} 


//WCISKANIE - CTRL+S (ZAPISANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL	  
keybd_event(0x53, 0, 0, 0); // S	    
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x53, 0, KEYEVENTF_KEYUP, 0); // S  
	

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
    
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3 


}

    
std::cout<<"TAK"<<std::endl;


}


else
{
    
    std::cout<<"NIE"<<std::endl;
    
}


plik << "5. Tworzenie specyfikacji materiałowej dla materiału: " << tworzenie_specyfikacji_materialowej_dla_materialu << endl;
//---------------------------------------------------------------------------
// TWORZENIE SPECYFIKACJI MATERIAŁOWEJ


//===========================================================================


// ZMIANA MARSZRUTY TECHNOLOGICZNEJ
//---------------------------------------------------------------------------
if (zmiana_marszruty_technologicznej == "t")
{
    
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
  
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_1); 	
//---------------------------------------------------------------------------
    
    
std::cout<<"6. Zmiana marszruty technologicznej: ";


//KLIKANIE W OKNO POLECEŃ SAP
//---------------------------------------------------------------------------
SetCursorPos( POZYCJA_OKIENKA_1 ); 
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);

   
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}   


//WPISYWANIE - CA02
//---------------------------------------------------------------------------
keybd_event(0x43, 0, 0, 0); // C	       
keybd_event(0x43, 0, KEYEVENTF_KEYUP, 0); // C
keybd_event(0x41, 0, 0, 0); // A	       
keybd_event(0x41, 0, KEYEVENTF_KEYUP, 0); // A  
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x32, 0, 0, 0); // 2	       
keybd_event(0x32, 0, KEYEVENTF_KEYUP, 0); // 2 
  
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}

    
//WCISKANIE - ENTER
//---------------------------------------------------------------------------  
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER     
    

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STRZALKA_POLA_GLOWNEGO_OS_X;
os_y = STRZALKA_POLA_GLOWNEGO_OS_Y;
       
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_2_RGB_2); 	
//---------------------------------------------------------------------------


//WCISKANIE - CTRL+A (ZAZNACZANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x41, 0, 0, 0); // A           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x41, 0, KEYEVENTF_KEYUP, 0); // A 

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - BACKSPACE
//---------------------------------------------------------------------------
keybd_event(0x08, 0, 0, 0); // BACKSPACE            
keybd_event(0x08, 0, KEYEVENTF_KEYUP, 0); // BACKSPACE 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;  
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y	       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1	       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;  
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB 
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL marszruta_zmienna = GlobalAlloc(GMEM_FIXED,strlen(marszruta_tekst) + 1); //text size + \0 character
    memcpy(marszruta_zmienna,marszruta_tekst,strlen(marszruta_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,marszruta_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x56, 0, 0, 0); // V           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V  
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}	


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER  


//STANDARDOWA MARSZRUTA - PRZEGLĄD OPERACJI
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STANDARDOWA_MARSZRUTA_ZMIANA_PRZEGLAD_OPERACJI_OS_X;
os_y = STANDARDOWA_MARSZRUTA_ZMIANA_PRZEGLAD_OPERACJI_OS_Y;
  
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_SZARY_4_RGB_1); 	
//---------------------------------------------------------------------------

    
//WCISKANIE - F5 (PRZEJŚCIE DO: NAGŁÓWEK MARSZRUTY/PLANU)
//---------------------------------------------------------------------------
keybd_event(0x74, 0, 0, 0); // F5
keybd_event(0x74, 0, KEYEVENTF_KEYUP, 0); // F5
//---------------------------------------------------------------------------
//STANDARDOWA MARSZRUTA - PRZEGLĄD OPERACJI


//STANDARDOWA MARSZRUTA - PEŁEN NAGŁÓWEK
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STANDARDOWA_MARSZRUTA_ZMIANA_PELEN_NAGLOWEK_OS_X;
os_y = STANDARDOWA_MARSZRUTA_ZMIANA_PELEN_NAGLOWEK_OS_Y;
    
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
    
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_BIALY_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - CTRL+F7 (PRZEJŚCIE DO: PRZYPISANIE MATERIAŁ-MARSZRUTA/PLAN)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x76, 0, 0, 0); // F7           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x76, 0, KEYEVENTF_KEYUP, 0); // F7  


//STANDARDOWA MARSZRUTA - PRZYPISANIE MATERIAŁU
//---------------------------------------------------------------------------

//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STANDARDOWA_MARSZRUTA_ZMIANA_PRZYPISANIE_MATERIALU_OS_X;
os_y = STANDARDOWA_MARSZRUTA_ZMIANA_PRZYPISANIE_MATERIALU_OS_Y;
       
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - CTRL+PAGE DOWN (PRZEJSCIE NA KONIEC TABELI)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL 
keybd_event(0x22, 0, 0, 0); // PAGE DOWN           
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x22, 0, KEYEVENTF_KEYUP, 0); // PAGE DOWN
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_2);		
}  


//WCISKANIE - CTRL+PAGE DOWN
//---------------------------------------------------------------------------
keybd_event(0x22, 0, 0, 0); // PAGE DOWN	
keybd_event(0x22, 0, KEYEVENTF_KEYUP, 0); // PAGE DOWN
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;  
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - 1
//---------------------------------------------------------------------------
keybd_event(0x31, 0, 0, 0); // 1	
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//POBIERANIE ZMIENNEJ DO SCHOWKA
//---------------------------------------------------------------------------
{
    HGLOBAL material_nowy_zmienna = GlobalAlloc(GMEM_FIXED,strlen(material_nowy_tekst) + 1); //text size + \0 character
    memcpy(material_nowy_zmienna,material_nowy_tekst,strlen(material_nowy_tekst));  //text size + \0 character
    if(OpenClipboard(NULL))
    {
        EmptyClipboard();
        SetClipboardData(CF_TEXT,material_nowy_zmienna);
        CloseClipboard();
    }
}


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - CTRL+V (WKLEJANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL
keybd_event(0x56, 0, 0, 0); // V	 
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x56, 0, KEYEVENTF_KEYUP, 0); // V  
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;  
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - TABULACJA
//---------------------------------------------------------------------------
keybd_event(0x09, 0, 0, 0); // TAB	 
keybd_event(0x09, 0, KEYEVENTF_KEYUP, 0); // TAB
	
	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++;  
	Sleep (CZAS_PAUZY_1);		
}


//WPISYWANIE - Y001
//---------------------------------------------------------------------------
keybd_event(0xA0, 0, 0, 0); // LEWY SHIFT 
keybd_event(0x59, 0, 0, 0); // Y	       
keybd_event(0x59, 0, KEYEVENTF_KEYUP, 0); // Y
keybd_event(0xA0, 0, KEYEVENTF_KEYUP, 0); // LEWY SHIFT  
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x30, 0, 0, 0); // 0	       
keybd_event(0x30, 0, KEYEVENTF_KEYUP, 0); // 0 
keybd_event(0x31, 0, 0, 0); // 1	       
keybd_event(0x31, 0, KEYEVENTF_KEYUP, 0); // 1

	
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - ENTER
//---------------------------------------------------------------------------
keybd_event(0x0D, 0, 0, 0); // ENTER
keybd_event(0x0D, 0, KEYEVENTF_KEYUP, 0); // ENTER 


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STANDARDOWA_MARSZRUTA_ZMIANA_PELEN_NAGLOWEK_OS_X;
os_y = STANDARDOWA_MARSZRUTA_ZMIANA_PELEN_NAGLOWEK_OS_Y;
 
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
 
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_BIALY_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - F8 (PRZEJŚCIE DO: PRZYPISANIE SKŁAD. - OGÓLNE)
//---------------------------------------------------------------------------
keybd_event(0x77, 0, 0, 0); // F8
keybd_event(0x77, 0, KEYEVENTF_KEYUP, 0); // F8 


//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = STANDARDOWA_MARSZRUTA_ZMIANA_PRZYPISANIE_SKLADNIKOW_OS_X;
os_y = STANDARDOWA_MARSZRUTA_ZMIANA_PRZYPISANIE_SKLADNIKOW_OS_Y;
       
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);

    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_NIEBIESKI_1_RGB_1); 	
//---------------------------------------------------------------------------


//WCISKANIE - CTRL+PAGE DOWN (PRZEJŚCIE NA KONIEC TABELI)
//---------------------------------------------------------------------------
    keybd_event(0x11, 0, 0, 0); // CTRL 
	keybd_event(0x22, 0, 0, 0); // PAGE DOWN           
	keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
	keybd_event(0x22, 0, KEYEVENTF_KEYUP, 0); // PAGE DOWN
	
	
pauza = 1;
while( pauza <= max_etapy )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
	

//WCISKANIE - STRZŁKA W DÓŁ
//---------------------------------------------------------------------------	
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ     	
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 
keybd_event(0x28, 0, 0, 0); // STRZAŁKA W DÓŁ           
keybd_event(0x28, 0, KEYEVENTF_KEYUP, 0); // STRZAŁKA W DÓŁ 


pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


//WCISKANIE - F2 (PRZEJŚCIE DO INDEKSU)
//---------------------------------------------------------------------------
keybd_event(0x71, 0, 0, 0); // F2	 
keybd_event(0x71, 0, KEYEVENTF_KEYUP, 0); // F2


string zmiana_marszruty_zapisanie;

std::cout<<"Zapisać zmiany (t/n)? ";
std::cin>>zmiana_marszruty_zapisanie;


if (zmiana_marszruty_zapisanie == "t") {

//KLIKANIE W PUSTE POLE SAP
//---------------------------------------------------------------------------
SetCursorPos( PUSTE_POLE_SAP_2 );
mouse_event(MOUSEEVENTF_LEFTDOWN | MOUSEEVENTF_LEFTUP,0,0,0,0);


pauza = 1;
while( pauza <= max_etapy )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}
 
 
//WCISKANIE - CTRL+S (ZAPISANIE)
//---------------------------------------------------------------------------
keybd_event(0x11, 0, 0, 0); // CTRL	    
keybd_event(0x53, 0, 0, 0); // S	    
keybd_event(0x11, 0, KEYEVENTF_KEYUP, 0); // CTRL   
keybd_event(0x53, 0, KEYEVENTF_KEYUP, 0); // S    
	
	
//ROZPOZNANIE KOLORU
//---------------------------------------------------------------------------
os_x = ZNACZEK_POLA_GLOWNEGO_OS_X;
os_y = ZNACZEK_POLA_GLOWNEGO_OS_Y;
         
do
{           
	HDC hdc = GetDC(NULL);
	DWORD color = GetPixel(hdc, os_x, os_y);
	unsigned int rr = GetRValue(color);
	unsigned int gg = GetGValue(color);
	unsigned int bb = GetBValue(color);
    
    a = rr;
    b = gg;
    c = bb;
   
    
pauza = 1;
while( pauza <= max_czynnosci )
{
    pauza++; 
	Sleep (CZAS_PAUZY_1);		
}


}   while (KOLOR_ZIELONY_1_RGB_1); 	
//---------------------------------------------------------------------------	


//WCISKANIE - F3 (POWRACANIE)
//---------------------------------------------------------------------------
keybd_event(0x72, 0, 0, 0); // F3 
keybd_event(0x72, 0, KEYEVENTF_KEYUP, 0); // F3 
    
}


    
std::cout<<"   Zmiana marszruty technologicznej: TAK"<<std::endl;


}


else
{
    
std::cout<<"6. Zmiana marszruty technologicznej: NIE"<<std::endl;

}


plik << "6. Zmiana marszruty technologicznej: "<<zmiana_marszruty_technologicznej<<endl;
plik << "==========================================================================="<<endl;
//---------------------------------------------------------------------------
//ZMIANA MARSZRUTY TECHNOLOGICZNEJ

	
string data_koniec = currentDateTime();	

plik << "Data zakończenia: "<< currentDateTime() <<endl;   
plik << " " <<endl;
plik << "<<<KONIEC>>>";
plik.close();





}

else {
    
std::cout<<"---------------------------------------------------------------------------"<<std::endl;
std::cout<<"BRAK DANYCH"<<std::endl;   
std::cout<<"---------------------------------------------------------------------------"<<std::endl; 
  
}


}


while(rodzaj_materialu != ""); //przerwij jeżeli linia będzie pusta (dane w pliku się skończą) UWAGA: Pamiętaj, żeby w pliku zostawić ostatnią linijkę pustą
przechwyt.close(); //zamykamy plik

/*
//WYŚWIETLANIE NA KONSOLI LOG
//---------------------------------------------------------------------------
string wyswietl_log;

std::cout<<" "<<endl;
std::cout<<"Wyświetlić zawartość pliku LOG (t/n)? ";
std::cin>>wyswietl_log;
std::cout<<" "<<endl;


if (wyswietl_log  == "t")    
{
    
plik.open( plik_caly.c_str(), ios::in );
    if( plik.good() ) {
    
    string linia;
        
    cout << " " << endl;
    cout << "Zawartość pliku: " << plik_start_tekst << material_nowy << plik_koniec_tekst << endl;
    cout << " " << endl;
        
    do {
        
        getline( plik, linia );
        cout << linia << endl;
        }
        while(linia !="<<<KONIEC>>>");

    plik.close();
    } 
    else cout << "Nie można wyświetlić zawartości pliku LOG" << endl;    
	
}
*/	
	
	
std::cout<<" "<<std::endl;
std::cout<<"Powtórzyć program (t/n): ";
std::cin >> x;


}
 
       
while( x == 't' );
    

if( x != 't' )
{
        
Sleep (CZAS_PAUZY_3);
std::cout<<" "<<std::endl;
std::cout<<"Koniec programu"<<std::endl;
        
}


Sleep(100000);	
 
 
cin.get();
return 0;


}
